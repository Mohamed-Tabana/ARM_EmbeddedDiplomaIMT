
6-LEDMatrix.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000fc8  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000008  0800115c  0800115c  0001115c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001164  08001164  000200b4  2**0
                  CONTENTS
  4 .ARM          00000000  08001164  08001164  000200b4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001164  08001164  000200b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001164  08001164  00011164  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001168  08001168  00011168  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000b4  20000000  0800116c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000005c  200000b4  08001220  000200b4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000110  08001220  00020110  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000200b4  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000298b  00000000  00000000  000200e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000994  00000000  00000000  00022a6f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002a0  00000000  00000000  00023408  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_macro  00002e2f  00000000  00000000  000236a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   000046b7  00000000  00000000  000264d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    000092ec  00000000  00000000  0002ab8e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000050  00000000  00000000  00033e7a  2**0
                  CONTENTS, READONLY
 19 .debug_ranges 000001f8  00000000  00000000  00033ed0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000828  00000000  00000000  000340c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	200000b4 	.word	0x200000b4
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08001144 	.word	0x08001144

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	200000b8 	.word	0x200000b8
 80001d0:	08001144 	.word	0x08001144

080001d4 <LEDMTX_vInit>:
#include "LEDMatrix_Interface.h"
#include "S2P_Interface.h"

#define ShiftREG
void LEDMTX_vInit()
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b082      	sub	sp, #8
 80001d8:	af00      	add	r7, sp, #0
	S2P_vInit();
 80001da:	f000 fed9 	bl	8000f90 <S2P_vInit>

	for (uint8_t i=0;i<NO_ROWS;i++)
 80001de:	2300      	movs	r3, #0
 80001e0:	71fb      	strb	r3, [r7, #7]
 80001e2:	e014      	b.n	800020e <LEDMTX_vInit+0x3a>
	{
		MGPIO_Init(&rows[i]);
 80001e4:	79fa      	ldrb	r2, [r7, #7]
 80001e6:	4613      	mov	r3, r2
 80001e8:	00db      	lsls	r3, r3, #3
 80001ea:	4413      	add	r3, r2
 80001ec:	4a0c      	ldr	r2, [pc, #48]	; (8000220 <LEDMTX_vInit+0x4c>)
 80001ee:	4413      	add	r3, r2
 80001f0:	4618      	mov	r0, r3
 80001f2:	f000 f85b 	bl	80002ac <MGPIO_Init>
		MGPIO_Init(&cols[i]);
 80001f6:	79fa      	ldrb	r2, [r7, #7]
 80001f8:	4613      	mov	r3, r2
 80001fa:	00db      	lsls	r3, r3, #3
 80001fc:	4413      	add	r3, r2
 80001fe:	4a09      	ldr	r2, [pc, #36]	; (8000224 <LEDMTX_vInit+0x50>)
 8000200:	4413      	add	r3, r2
 8000202:	4618      	mov	r0, r3
 8000204:	f000 f852 	bl	80002ac <MGPIO_Init>
	for (uint8_t i=0;i<NO_ROWS;i++)
 8000208:	79fb      	ldrb	r3, [r7, #7]
 800020a:	3301      	adds	r3, #1
 800020c:	71fb      	strb	r3, [r7, #7]
 800020e:	79fb      	ldrb	r3, [r7, #7]
 8000210:	2b07      	cmp	r3, #7
 8000212:	d9e7      	bls.n	80001e4 <LEDMTX_vInit+0x10>
	}

	MSTK_vInit();
 8000214:	f000 fe80 	bl	8000f18 <MSTK_vInit>
}
 8000218:	bf00      	nop
 800021a:	3708      	adds	r7, #8
 800021c:	46bd      	mov	sp, r7
 800021e:	bd80      	pop	{r7, pc}
 8000220:	20000000 	.word	0x20000000
 8000224:	20000048 	.word	0x20000048

08000228 <LEDMTX_vDisplayFrame>:
	}
}


void LEDMTX_vDisplayFrame  (uint8_t* frame,uint32_t frame_delay)
{
 8000228:	b580      	push	{r7, lr}
 800022a:	b084      	sub	sp, #16
 800022c:	af00      	add	r7, sp, #0
 800022e:	6078      	str	r0, [r7, #4]
 8000230:	6039      	str	r1, [r7, #0]
	//		S2P_vSendData(Local_u32Data);
	//
	//		/*4. busy wait 2.5 ms*/
	//		MSTK_vSetBusyWait(1250);
	//#endif
	Local_u32Data=(0X0000) | (uint16_t)(0xF0)<<8;
 8000232:	f44f 4370 	mov.w	r3, #61440	; 0xf000
 8000236:	60fb      	str	r3, [r7, #12]
	S2P_vSendData(Local_u32Data);
 8000238:	68f8      	ldr	r0, [r7, #12]
 800023a:	f000 fef1 	bl	8001020 <S2P_vSendData>
	MSTK_vSetBusyWait(2000000);
 800023e:	4808      	ldr	r0, [pc, #32]	; (8000260 <LEDMTX_vDisplayFrame+0x38>)
 8000240:	f000 fe80 	bl	8000f44 <MSTK_vSetBusyWait>
	Local_u32Data=(0X0000) | (uint16_t)(0x0F)<<8;
 8000244:	f44f 6370 	mov.w	r3, #3840	; 0xf00
 8000248:	60fb      	str	r3, [r7, #12]
	S2P_vSendData(Local_u32Data);
 800024a:	68f8      	ldr	r0, [r7, #12]
 800024c:	f000 fee8 	bl	8001020 <S2P_vSendData>
	MSTK_vSetBusyWait(2000000);
 8000250:	4803      	ldr	r0, [pc, #12]	; (8000260 <LEDMTX_vDisplayFrame+0x38>)
 8000252:	f000 fe77 	bl	8000f44 <MSTK_vSetBusyWait>

}
 8000256:	bf00      	nop
 8000258:	3710      	adds	r7, #16
 800025a:	46bd      	mov	sp, r7
 800025c:	bd80      	pop	{r7, pc}
 800025e:	bf00      	nop
 8000260:	001e8480 	.word	0x001e8480

08000264 <EXTI0_IRQHandler>:
#include "RCC_Interface.h"

EXTI_Callback_t Global_EXTICallBack[16];

void EXTI0_IRQHandler(void)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	af00      	add	r7, sp, #0
	//if (Global_EXTICallBack[0] != NULL)
	Global_EXTICallBack[0]();
 8000268:	4b05      	ldr	r3, [pc, #20]	; (8000280 <EXTI0_IRQHandler+0x1c>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	4798      	blx	r3
	SET_BIT(MEXTI->EXTI_PR,EXTI_LINE_0);
 800026e:	4b05      	ldr	r3, [pc, #20]	; (8000284 <EXTI0_IRQHandler+0x20>)
 8000270:	695b      	ldr	r3, [r3, #20]
 8000272:	4a04      	ldr	r2, [pc, #16]	; (8000284 <EXTI0_IRQHandler+0x20>)
 8000274:	f043 0301 	orr.w	r3, r3, #1
 8000278:	6153      	str	r3, [r2, #20]
}
 800027a:	bf00      	nop
 800027c:	bd80      	pop	{r7, pc}
 800027e:	bf00      	nop
 8000280:	200000d0 	.word	0x200000d0
 8000284:	40013c00 	.word	0x40013c00

08000288 <EXTI1_IRQHandler>:
void EXTI1_IRQHandler(void)
{
 8000288:	b580      	push	{r7, lr}
 800028a:	af00      	add	r7, sp, #0
//	if (Global_EXTICallBack[1] != NULL)
	Global_EXTICallBack[1]();
 800028c:	4b05      	ldr	r3, [pc, #20]	; (80002a4 <EXTI1_IRQHandler+0x1c>)
 800028e:	685b      	ldr	r3, [r3, #4]
 8000290:	4798      	blx	r3
	SET_BIT(MEXTI->EXTI_PR,EXTI_LINE_1);
 8000292:	4b05      	ldr	r3, [pc, #20]	; (80002a8 <EXTI1_IRQHandler+0x20>)
 8000294:	695b      	ldr	r3, [r3, #20]
 8000296:	4a04      	ldr	r2, [pc, #16]	; (80002a8 <EXTI1_IRQHandler+0x20>)
 8000298:	f043 0302 	orr.w	r3, r3, #2
 800029c:	6153      	str	r3, [r2, #20]

}
 800029e:	bf00      	nop
 80002a0:	bd80      	pop	{r7, pc}
 80002a2:	bf00      	nop
 80002a4:	200000d0 	.word	0x200000d0
 80002a8:	40013c00 	.word	0x40013c00

080002ac <MGPIO_Init>:

#include "GPIO_Interface.h"
#include "RCC_Interface.h"

void MGPIO_Init(GPIO_pCFG_t copy_GPIO_pCFG)
{
 80002ac:	b580      	push	{r7, lr}
 80002ae:	b082      	sub	sp, #8
 80002b0:	af00      	add	r7, sp, #0
 80002b2:	6078      	str	r0, [r7, #4]
	RCC_AHB1EnableCLK(GPIOAEN);
 80002b4:	2000      	movs	r0, #0
 80002b6:	f000 fe17 	bl	8000ee8 <RCC_AHB1EnableCLK>
	RCC_AHB1EnableCLK(GPIOBEN);
 80002ba:	2001      	movs	r0, #1
 80002bc:	f000 fe14 	bl	8000ee8 <RCC_AHB1EnableCLK>

	 MGPIO_vSetPinType(copy_GPIO_pCFG->PIN_Port,copy_GPIO_pCFG->PIN_Number,copy_GPIO_pCFG->PIN_Type);
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	7818      	ldrb	r0, [r3, #0]
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	7859      	ldrb	r1, [r3, #1]
 80002c8:	687b      	ldr	r3, [r7, #4]
 80002ca:	789b      	ldrb	r3, [r3, #2]
 80002cc:	461a      	mov	r2, r3
 80002ce:	f000 f83b 	bl	8000348 <MGPIO_vSetPinType>
	 MGPIO_vSetOutputPinType(copy_GPIO_pCFG->PIN_Port,copy_GPIO_pCFG->PIN_Number,copy_GPIO_pCFG->PIN_OType);
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	7818      	ldrb	r0, [r3, #0]
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	7859      	ldrb	r1, [r3, #1]
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	791b      	ldrb	r3, [r3, #4]
 80002de:	461a      	mov	r2, r3
 80002e0:	f000 f8f0 	bl	80004c4 <MGPIO_vSetOutputPinType>
	 MGPIO_vSetOutputPinSpeed(copy_GPIO_pCFG->PIN_Port,copy_GPIO_pCFG->PIN_Number,copy_GPIO_pCFG->PIN_OSpeed);
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	7818      	ldrb	r0, [r3, #0]
 80002e8:	687b      	ldr	r3, [r7, #4]
 80002ea:	7859      	ldrb	r1, [r3, #1]
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	795b      	ldrb	r3, [r3, #5]
 80002f0:	461a      	mov	r2, r3
 80002f2:	f000 f99b 	bl	800062c <MGPIO_vSetOutputPinSpeed>
	 MGPIO_vSetInputPinPullUpDown(copy_GPIO_pCFG->PIN_Port,copy_GPIO_pCFG->PIN_Number,copy_GPIO_pCFG->PIN_IPullUpDown);
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	7818      	ldrb	r0, [r3, #0]
 80002fa:	687b      	ldr	r3, [r7, #4]
 80002fc:	7859      	ldrb	r1, [r3, #1]
 80002fe:	687b      	ldr	r3, [r7, #4]
 8000300:	799b      	ldrb	r3, [r3, #6]
 8000302:	461a      	mov	r2, r3
 8000304:	f000 fa50 	bl	80007a8 <MGPIO_vSetInputPinPullUpDown>
	 MGPIO_vSetOutputPinValueBSR(copy_GPIO_pCFG->PIN_Port,copy_GPIO_pCFG->PIN_Number,copy_GPIO_pCFG->PIN_OValue);
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	7818      	ldrb	r0, [r3, #0]
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	7859      	ldrb	r1, [r3, #1]
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	78db      	ldrb	r3, [r3, #3]
 8000314:	461a      	mov	r2, r3
 8000316:	f000 fb05 	bl	8000924 <MGPIO_vSetOutputPinValueBSR>
	 MGPIO_vSetPinLockSTS(copy_GPIO_pCFG->PIN_Port,copy_GPIO_pCFG->PIN_Number,copy_GPIO_pCFG->PIN_LCKSTS);
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	7818      	ldrb	r0, [r3, #0]
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	7859      	ldrb	r1, [r3, #1]
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	79db      	ldrb	r3, [r3, #7]
 8000326:	461a      	mov	r2, r3
 8000328:	f000 fbe4 	bl	8000af4 <MGPIO_vSetPinLockSTS>
	 MGPIO_vSetPinAlternativeFunction(copy_GPIO_pCFG->PIN_Port,copy_GPIO_pCFG->PIN_Number,copy_GPIO_pCFG->PIN_AF);
 800032c:	687b      	ldr	r3, [r7, #4]
 800032e:	7818      	ldrb	r0, [r3, #0]
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	7859      	ldrb	r1, [r3, #1]
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	7a1b      	ldrb	r3, [r3, #8]
 8000338:	461a      	mov	r2, r3
 800033a:	f000 fc8d 	bl	8000c58 <MGPIO_vSetPinAlternativeFunction>


}
 800033e:	bf00      	nop
 8000340:	3708      	adds	r7, #8
 8000342:	46bd      	mov	sp, r7
 8000344:	bd80      	pop	{r7, pc}
	...

08000348 <MGPIO_vSetPinType>:

void MGPIO_vSetPinType(GPIO_Port_t copy_eGPIO_Port,GPIO_Pin_t copy_eGPIO_Pin,GPIO_PinType_t copy_eGPIO_PinType)
{
 8000348:	b480      	push	{r7}
 800034a:	b083      	sub	sp, #12
 800034c:	af00      	add	r7, sp, #0
 800034e:	4603      	mov	r3, r0
 8000350:	71fb      	strb	r3, [r7, #7]
 8000352:	460b      	mov	r3, r1
 8000354:	71bb      	strb	r3, [r7, #6]
 8000356:	4613      	mov	r3, r2
 8000358:	717b      	strb	r3, [r7, #5]
	switch (copy_eGPIO_Port)
 800035a:	79fb      	ldrb	r3, [r7, #7]
 800035c:	2b05      	cmp	r3, #5
 800035e:	f200 809f 	bhi.w	80004a0 <MGPIO_vSetPinType+0x158>
 8000362:	a201      	add	r2, pc, #4	; (adr r2, 8000368 <MGPIO_vSetPinType+0x20>)
 8000364:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000368:	08000381 	.word	0x08000381
 800036c:	080003b1 	.word	0x080003b1
 8000370:	080003e1 	.word	0x080003e1
 8000374:	08000411 	.word	0x08000411
 8000378:	08000441 	.word	0x08000441
 800037c:	08000471 	.word	0x08000471
	{
	case PORTA:
		GPIOA->GPIO_MODER &= ~(0b11<<copy_eGPIO_Pin*2);
 8000380:	4b4a      	ldr	r3, [pc, #296]	; (80004ac <MGPIO_vSetPinType+0x164>)
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	79ba      	ldrb	r2, [r7, #6]
 8000386:	0052      	lsls	r2, r2, #1
 8000388:	2103      	movs	r1, #3
 800038a:	fa01 f202 	lsl.w	r2, r1, r2
 800038e:	43d2      	mvns	r2, r2
 8000390:	4611      	mov	r1, r2
 8000392:	4a46      	ldr	r2, [pc, #280]	; (80004ac <MGPIO_vSetPinType+0x164>)
 8000394:	400b      	ands	r3, r1
 8000396:	6013      	str	r3, [r2, #0]
		GPIOA->GPIO_MODER |= (copy_eGPIO_PinType<<copy_eGPIO_Pin*2);
 8000398:	4b44      	ldr	r3, [pc, #272]	; (80004ac <MGPIO_vSetPinType+0x164>)
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	7979      	ldrb	r1, [r7, #5]
 800039e:	79ba      	ldrb	r2, [r7, #6]
 80003a0:	0052      	lsls	r2, r2, #1
 80003a2:	fa01 f202 	lsl.w	r2, r1, r2
 80003a6:	4611      	mov	r1, r2
 80003a8:	4a40      	ldr	r2, [pc, #256]	; (80004ac <MGPIO_vSetPinType+0x164>)
 80003aa:	430b      	orrs	r3, r1
 80003ac:	6013      	str	r3, [r2, #0]
		break;
 80003ae:	e077      	b.n	80004a0 <MGPIO_vSetPinType+0x158>
	case PORTB:
		GPIOB->GPIO_MODER &= ~(0b11<<copy_eGPIO_Pin*2);
 80003b0:	4b3f      	ldr	r3, [pc, #252]	; (80004b0 <MGPIO_vSetPinType+0x168>)
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	79ba      	ldrb	r2, [r7, #6]
 80003b6:	0052      	lsls	r2, r2, #1
 80003b8:	2103      	movs	r1, #3
 80003ba:	fa01 f202 	lsl.w	r2, r1, r2
 80003be:	43d2      	mvns	r2, r2
 80003c0:	4611      	mov	r1, r2
 80003c2:	4a3b      	ldr	r2, [pc, #236]	; (80004b0 <MGPIO_vSetPinType+0x168>)
 80003c4:	400b      	ands	r3, r1
 80003c6:	6013      	str	r3, [r2, #0]
		GPIOB->GPIO_MODER |= (copy_eGPIO_PinType<<copy_eGPIO_Pin*2);
 80003c8:	4b39      	ldr	r3, [pc, #228]	; (80004b0 <MGPIO_vSetPinType+0x168>)
 80003ca:	681b      	ldr	r3, [r3, #0]
 80003cc:	7979      	ldrb	r1, [r7, #5]
 80003ce:	79ba      	ldrb	r2, [r7, #6]
 80003d0:	0052      	lsls	r2, r2, #1
 80003d2:	fa01 f202 	lsl.w	r2, r1, r2
 80003d6:	4611      	mov	r1, r2
 80003d8:	4a35      	ldr	r2, [pc, #212]	; (80004b0 <MGPIO_vSetPinType+0x168>)
 80003da:	430b      	orrs	r3, r1
 80003dc:	6013      	str	r3, [r2, #0]
		break;
 80003de:	e05f      	b.n	80004a0 <MGPIO_vSetPinType+0x158>
	case PORTC:
		GPIOC->GPIO_MODER &= ~(0b11<<copy_eGPIO_Pin*2);
 80003e0:	4b34      	ldr	r3, [pc, #208]	; (80004b4 <MGPIO_vSetPinType+0x16c>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	79ba      	ldrb	r2, [r7, #6]
 80003e6:	0052      	lsls	r2, r2, #1
 80003e8:	2103      	movs	r1, #3
 80003ea:	fa01 f202 	lsl.w	r2, r1, r2
 80003ee:	43d2      	mvns	r2, r2
 80003f0:	4611      	mov	r1, r2
 80003f2:	4a30      	ldr	r2, [pc, #192]	; (80004b4 <MGPIO_vSetPinType+0x16c>)
 80003f4:	400b      	ands	r3, r1
 80003f6:	6013      	str	r3, [r2, #0]
		GPIOC->GPIO_MODER |= (copy_eGPIO_PinType<<copy_eGPIO_Pin*2);
 80003f8:	4b2e      	ldr	r3, [pc, #184]	; (80004b4 <MGPIO_vSetPinType+0x16c>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	7979      	ldrb	r1, [r7, #5]
 80003fe:	79ba      	ldrb	r2, [r7, #6]
 8000400:	0052      	lsls	r2, r2, #1
 8000402:	fa01 f202 	lsl.w	r2, r1, r2
 8000406:	4611      	mov	r1, r2
 8000408:	4a2a      	ldr	r2, [pc, #168]	; (80004b4 <MGPIO_vSetPinType+0x16c>)
 800040a:	430b      	orrs	r3, r1
 800040c:	6013      	str	r3, [r2, #0]
		break;
 800040e:	e047      	b.n	80004a0 <MGPIO_vSetPinType+0x158>
	case PORTD:
		GPIOD->GPIO_MODER &= ~(0b11<<copy_eGPIO_Pin*2);
 8000410:	4b29      	ldr	r3, [pc, #164]	; (80004b8 <MGPIO_vSetPinType+0x170>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	79ba      	ldrb	r2, [r7, #6]
 8000416:	0052      	lsls	r2, r2, #1
 8000418:	2103      	movs	r1, #3
 800041a:	fa01 f202 	lsl.w	r2, r1, r2
 800041e:	43d2      	mvns	r2, r2
 8000420:	4611      	mov	r1, r2
 8000422:	4a25      	ldr	r2, [pc, #148]	; (80004b8 <MGPIO_vSetPinType+0x170>)
 8000424:	400b      	ands	r3, r1
 8000426:	6013      	str	r3, [r2, #0]
		GPIOD->GPIO_MODER |= (copy_eGPIO_PinType<<copy_eGPIO_Pin*2);
 8000428:	4b23      	ldr	r3, [pc, #140]	; (80004b8 <MGPIO_vSetPinType+0x170>)
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	7979      	ldrb	r1, [r7, #5]
 800042e:	79ba      	ldrb	r2, [r7, #6]
 8000430:	0052      	lsls	r2, r2, #1
 8000432:	fa01 f202 	lsl.w	r2, r1, r2
 8000436:	4611      	mov	r1, r2
 8000438:	4a1f      	ldr	r2, [pc, #124]	; (80004b8 <MGPIO_vSetPinType+0x170>)
 800043a:	430b      	orrs	r3, r1
 800043c:	6013      	str	r3, [r2, #0]
		break;
 800043e:	e02f      	b.n	80004a0 <MGPIO_vSetPinType+0x158>
	case PORTE:
		GPIOE->GPIO_MODER &= ~(0b11<<copy_eGPIO_Pin*2);
 8000440:	4b1e      	ldr	r3, [pc, #120]	; (80004bc <MGPIO_vSetPinType+0x174>)
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	79ba      	ldrb	r2, [r7, #6]
 8000446:	0052      	lsls	r2, r2, #1
 8000448:	2103      	movs	r1, #3
 800044a:	fa01 f202 	lsl.w	r2, r1, r2
 800044e:	43d2      	mvns	r2, r2
 8000450:	4611      	mov	r1, r2
 8000452:	4a1a      	ldr	r2, [pc, #104]	; (80004bc <MGPIO_vSetPinType+0x174>)
 8000454:	400b      	ands	r3, r1
 8000456:	6013      	str	r3, [r2, #0]
		GPIOE->GPIO_MODER |= (copy_eGPIO_PinType<<copy_eGPIO_Pin*2);
 8000458:	4b18      	ldr	r3, [pc, #96]	; (80004bc <MGPIO_vSetPinType+0x174>)
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	7979      	ldrb	r1, [r7, #5]
 800045e:	79ba      	ldrb	r2, [r7, #6]
 8000460:	0052      	lsls	r2, r2, #1
 8000462:	fa01 f202 	lsl.w	r2, r1, r2
 8000466:	4611      	mov	r1, r2
 8000468:	4a14      	ldr	r2, [pc, #80]	; (80004bc <MGPIO_vSetPinType+0x174>)
 800046a:	430b      	orrs	r3, r1
 800046c:	6013      	str	r3, [r2, #0]
		break;
 800046e:	e017      	b.n	80004a0 <MGPIO_vSetPinType+0x158>
	case PORTH:
		GPIOH->GPIO_MODER &= ~(0b11<<copy_eGPIO_Pin*2);
 8000470:	4b13      	ldr	r3, [pc, #76]	; (80004c0 <MGPIO_vSetPinType+0x178>)
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	79ba      	ldrb	r2, [r7, #6]
 8000476:	0052      	lsls	r2, r2, #1
 8000478:	2103      	movs	r1, #3
 800047a:	fa01 f202 	lsl.w	r2, r1, r2
 800047e:	43d2      	mvns	r2, r2
 8000480:	4611      	mov	r1, r2
 8000482:	4a0f      	ldr	r2, [pc, #60]	; (80004c0 <MGPIO_vSetPinType+0x178>)
 8000484:	400b      	ands	r3, r1
 8000486:	6013      	str	r3, [r2, #0]
		GPIOH->GPIO_MODER |= (copy_eGPIO_PinType<<copy_eGPIO_Pin*2);
 8000488:	4b0d      	ldr	r3, [pc, #52]	; (80004c0 <MGPIO_vSetPinType+0x178>)
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	7979      	ldrb	r1, [r7, #5]
 800048e:	79ba      	ldrb	r2, [r7, #6]
 8000490:	0052      	lsls	r2, r2, #1
 8000492:	fa01 f202 	lsl.w	r2, r1, r2
 8000496:	4611      	mov	r1, r2
 8000498:	4a09      	ldr	r2, [pc, #36]	; (80004c0 <MGPIO_vSetPinType+0x178>)
 800049a:	430b      	orrs	r3, r1
 800049c:	6013      	str	r3, [r2, #0]
		break;
 800049e:	bf00      	nop
	}
}
 80004a0:	bf00      	nop
 80004a2:	370c      	adds	r7, #12
 80004a4:	46bd      	mov	sp, r7
 80004a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004aa:	4770      	bx	lr
 80004ac:	40020000 	.word	0x40020000
 80004b0:	40020400 	.word	0x40020400
 80004b4:	40020800 	.word	0x40020800
 80004b8:	40020c00 	.word	0x40020c00
 80004bc:	40021000 	.word	0x40021000
 80004c0:	40021c00 	.word	0x40021c00

080004c4 <MGPIO_vSetOutputPinType>:
void MGPIO_vSetOutputPinType(GPIO_Port_t copy_eGPIO_Port,GPIO_Pin_t copy_eGPIO_Pin,GPIO_OType_t copy_GPIO_OType)
{
 80004c4:	b480      	push	{r7}
 80004c6:	b083      	sub	sp, #12
 80004c8:	af00      	add	r7, sp, #0
 80004ca:	4603      	mov	r3, r0
 80004cc:	71fb      	strb	r3, [r7, #7]
 80004ce:	460b      	mov	r3, r1
 80004d0:	71bb      	strb	r3, [r7, #6]
 80004d2:	4613      	mov	r3, r2
 80004d4:	717b      	strb	r3, [r7, #5]
	switch (copy_eGPIO_Port)
 80004d6:	79fb      	ldrb	r3, [r7, #7]
 80004d8:	2b05      	cmp	r3, #5
 80004da:	f200 8095 	bhi.w	8000608 <MGPIO_vSetOutputPinType+0x144>
 80004de:	a201      	add	r2, pc, #4	; (adr r2, 80004e4 <MGPIO_vSetOutputPinType+0x20>)
 80004e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80004e4:	080004fd 	.word	0x080004fd
 80004e8:	0800052b 	.word	0x0800052b
 80004ec:	08000559 	.word	0x08000559
 80004f0:	08000585 	.word	0x08000585
 80004f4:	080005b1 	.word	0x080005b1
 80004f8:	080005dd 	.word	0x080005dd
	{
	case PORTA:
		GPIOA->GPIO_OTYPER &= ~(0b1<<copy_eGPIO_Pin*2);
 80004fc:	4b45      	ldr	r3, [pc, #276]	; (8000614 <MGPIO_vSetOutputPinType+0x150>)
 80004fe:	685b      	ldr	r3, [r3, #4]
 8000500:	79ba      	ldrb	r2, [r7, #6]
 8000502:	0052      	lsls	r2, r2, #1
 8000504:	2101      	movs	r1, #1
 8000506:	fa01 f202 	lsl.w	r2, r1, r2
 800050a:	43d2      	mvns	r2, r2
 800050c:	4611      	mov	r1, r2
 800050e:	4a41      	ldr	r2, [pc, #260]	; (8000614 <MGPIO_vSetOutputPinType+0x150>)
 8000510:	400b      	ands	r3, r1
 8000512:	6053      	str	r3, [r2, #4]
		GPIOA->GPIO_OTYPER |= (copy_GPIO_OType<<copy_eGPIO_Pin);
 8000514:	4b3f      	ldr	r3, [pc, #252]	; (8000614 <MGPIO_vSetOutputPinType+0x150>)
 8000516:	685b      	ldr	r3, [r3, #4]
 8000518:	7979      	ldrb	r1, [r7, #5]
 800051a:	79ba      	ldrb	r2, [r7, #6]
 800051c:	fa01 f202 	lsl.w	r2, r1, r2
 8000520:	4611      	mov	r1, r2
 8000522:	4a3c      	ldr	r2, [pc, #240]	; (8000614 <MGPIO_vSetOutputPinType+0x150>)
 8000524:	430b      	orrs	r3, r1
 8000526:	6053      	str	r3, [r2, #4]
		break;
 8000528:	e06e      	b.n	8000608 <MGPIO_vSetOutputPinType+0x144>
	case PORTB:
		GPIOB->GPIO_OTYPER &= ~(0b1<<copy_eGPIO_Pin*2);
 800052a:	4b3b      	ldr	r3, [pc, #236]	; (8000618 <MGPIO_vSetOutputPinType+0x154>)
 800052c:	685b      	ldr	r3, [r3, #4]
 800052e:	79ba      	ldrb	r2, [r7, #6]
 8000530:	0052      	lsls	r2, r2, #1
 8000532:	2101      	movs	r1, #1
 8000534:	fa01 f202 	lsl.w	r2, r1, r2
 8000538:	43d2      	mvns	r2, r2
 800053a:	4611      	mov	r1, r2
 800053c:	4a36      	ldr	r2, [pc, #216]	; (8000618 <MGPIO_vSetOutputPinType+0x154>)
 800053e:	400b      	ands	r3, r1
 8000540:	6053      	str	r3, [r2, #4]
		GPIOB->GPIO_OTYPER |= (copy_GPIO_OType<<copy_eGPIO_Pin);
 8000542:	4b35      	ldr	r3, [pc, #212]	; (8000618 <MGPIO_vSetOutputPinType+0x154>)
 8000544:	685b      	ldr	r3, [r3, #4]
 8000546:	7979      	ldrb	r1, [r7, #5]
 8000548:	79ba      	ldrb	r2, [r7, #6]
 800054a:	fa01 f202 	lsl.w	r2, r1, r2
 800054e:	4611      	mov	r1, r2
 8000550:	4a31      	ldr	r2, [pc, #196]	; (8000618 <MGPIO_vSetOutputPinType+0x154>)
 8000552:	430b      	orrs	r3, r1
 8000554:	6053      	str	r3, [r2, #4]
		break;
 8000556:	e057      	b.n	8000608 <MGPIO_vSetOutputPinType+0x144>
	case PORTC:
		GPIOC->GPIO_OTYPER &= ~(0b1<<copy_eGPIO_Pin);
 8000558:	4b30      	ldr	r3, [pc, #192]	; (800061c <MGPIO_vSetOutputPinType+0x158>)
 800055a:	685b      	ldr	r3, [r3, #4]
 800055c:	79ba      	ldrb	r2, [r7, #6]
 800055e:	2101      	movs	r1, #1
 8000560:	fa01 f202 	lsl.w	r2, r1, r2
 8000564:	43d2      	mvns	r2, r2
 8000566:	4611      	mov	r1, r2
 8000568:	4a2c      	ldr	r2, [pc, #176]	; (800061c <MGPIO_vSetOutputPinType+0x158>)
 800056a:	400b      	ands	r3, r1
 800056c:	6053      	str	r3, [r2, #4]
		GPIOC->GPIO_OTYPER |= (copy_GPIO_OType<<copy_eGPIO_Pin);
 800056e:	4b2b      	ldr	r3, [pc, #172]	; (800061c <MGPIO_vSetOutputPinType+0x158>)
 8000570:	685b      	ldr	r3, [r3, #4]
 8000572:	7979      	ldrb	r1, [r7, #5]
 8000574:	79ba      	ldrb	r2, [r7, #6]
 8000576:	fa01 f202 	lsl.w	r2, r1, r2
 800057a:	4611      	mov	r1, r2
 800057c:	4a27      	ldr	r2, [pc, #156]	; (800061c <MGPIO_vSetOutputPinType+0x158>)
 800057e:	430b      	orrs	r3, r1
 8000580:	6053      	str	r3, [r2, #4]
		break;
 8000582:	e041      	b.n	8000608 <MGPIO_vSetOutputPinType+0x144>
	case PORTD:
		GPIOD->GPIO_OTYPER &= ~(0b1<<copy_eGPIO_Pin);
 8000584:	4b26      	ldr	r3, [pc, #152]	; (8000620 <MGPIO_vSetOutputPinType+0x15c>)
 8000586:	685b      	ldr	r3, [r3, #4]
 8000588:	79ba      	ldrb	r2, [r7, #6]
 800058a:	2101      	movs	r1, #1
 800058c:	fa01 f202 	lsl.w	r2, r1, r2
 8000590:	43d2      	mvns	r2, r2
 8000592:	4611      	mov	r1, r2
 8000594:	4a22      	ldr	r2, [pc, #136]	; (8000620 <MGPIO_vSetOutputPinType+0x15c>)
 8000596:	400b      	ands	r3, r1
 8000598:	6053      	str	r3, [r2, #4]
		GPIOD->GPIO_OTYPER |= (copy_GPIO_OType<<copy_eGPIO_Pin);
 800059a:	4b21      	ldr	r3, [pc, #132]	; (8000620 <MGPIO_vSetOutputPinType+0x15c>)
 800059c:	685b      	ldr	r3, [r3, #4]
 800059e:	7979      	ldrb	r1, [r7, #5]
 80005a0:	79ba      	ldrb	r2, [r7, #6]
 80005a2:	fa01 f202 	lsl.w	r2, r1, r2
 80005a6:	4611      	mov	r1, r2
 80005a8:	4a1d      	ldr	r2, [pc, #116]	; (8000620 <MGPIO_vSetOutputPinType+0x15c>)
 80005aa:	430b      	orrs	r3, r1
 80005ac:	6053      	str	r3, [r2, #4]
		break;
 80005ae:	e02b      	b.n	8000608 <MGPIO_vSetOutputPinType+0x144>
	case PORTE:
		GPIOE->GPIO_OTYPER &= ~(0b1<<copy_eGPIO_Pin);
 80005b0:	4b1c      	ldr	r3, [pc, #112]	; (8000624 <MGPIO_vSetOutputPinType+0x160>)
 80005b2:	685b      	ldr	r3, [r3, #4]
 80005b4:	79ba      	ldrb	r2, [r7, #6]
 80005b6:	2101      	movs	r1, #1
 80005b8:	fa01 f202 	lsl.w	r2, r1, r2
 80005bc:	43d2      	mvns	r2, r2
 80005be:	4611      	mov	r1, r2
 80005c0:	4a18      	ldr	r2, [pc, #96]	; (8000624 <MGPIO_vSetOutputPinType+0x160>)
 80005c2:	400b      	ands	r3, r1
 80005c4:	6053      	str	r3, [r2, #4]
		GPIOE->GPIO_OTYPER |= (copy_GPIO_OType<<copy_eGPIO_Pin);
 80005c6:	4b17      	ldr	r3, [pc, #92]	; (8000624 <MGPIO_vSetOutputPinType+0x160>)
 80005c8:	685b      	ldr	r3, [r3, #4]
 80005ca:	7979      	ldrb	r1, [r7, #5]
 80005cc:	79ba      	ldrb	r2, [r7, #6]
 80005ce:	fa01 f202 	lsl.w	r2, r1, r2
 80005d2:	4611      	mov	r1, r2
 80005d4:	4a13      	ldr	r2, [pc, #76]	; (8000624 <MGPIO_vSetOutputPinType+0x160>)
 80005d6:	430b      	orrs	r3, r1
 80005d8:	6053      	str	r3, [r2, #4]
		break;
 80005da:	e015      	b.n	8000608 <MGPIO_vSetOutputPinType+0x144>
	case PORTH:
		GPIOH->GPIO_OTYPER &= ~(0b1<<copy_eGPIO_Pin);
 80005dc:	4b12      	ldr	r3, [pc, #72]	; (8000628 <MGPIO_vSetOutputPinType+0x164>)
 80005de:	685b      	ldr	r3, [r3, #4]
 80005e0:	79ba      	ldrb	r2, [r7, #6]
 80005e2:	2101      	movs	r1, #1
 80005e4:	fa01 f202 	lsl.w	r2, r1, r2
 80005e8:	43d2      	mvns	r2, r2
 80005ea:	4611      	mov	r1, r2
 80005ec:	4a0e      	ldr	r2, [pc, #56]	; (8000628 <MGPIO_vSetOutputPinType+0x164>)
 80005ee:	400b      	ands	r3, r1
 80005f0:	6053      	str	r3, [r2, #4]
		GPIOH->GPIO_OTYPER |= (copy_GPIO_OType<<copy_eGPIO_Pin);
 80005f2:	4b0d      	ldr	r3, [pc, #52]	; (8000628 <MGPIO_vSetOutputPinType+0x164>)
 80005f4:	685b      	ldr	r3, [r3, #4]
 80005f6:	7979      	ldrb	r1, [r7, #5]
 80005f8:	79ba      	ldrb	r2, [r7, #6]
 80005fa:	fa01 f202 	lsl.w	r2, r1, r2
 80005fe:	4611      	mov	r1, r2
 8000600:	4a09      	ldr	r2, [pc, #36]	; (8000628 <MGPIO_vSetOutputPinType+0x164>)
 8000602:	430b      	orrs	r3, r1
 8000604:	6053      	str	r3, [r2, #4]
		break;
 8000606:	bf00      	nop
	}
}
 8000608:	bf00      	nop
 800060a:	370c      	adds	r7, #12
 800060c:	46bd      	mov	sp, r7
 800060e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000612:	4770      	bx	lr
 8000614:	40020000 	.word	0x40020000
 8000618:	40020400 	.word	0x40020400
 800061c:	40020800 	.word	0x40020800
 8000620:	40020c00 	.word	0x40020c00
 8000624:	40021000 	.word	0x40021000
 8000628:	40021c00 	.word	0x40021c00

0800062c <MGPIO_vSetOutputPinSpeed>:
void MGPIO_vSetOutputPinSpeed(GPIO_Port_t copy_eGPIO_Port,GPIO_Pin_t copy_eGPIO_Pin,GPIO_OSpeed_t copy_GPIO_OSpeed)
{
 800062c:	b480      	push	{r7}
 800062e:	b083      	sub	sp, #12
 8000630:	af00      	add	r7, sp, #0
 8000632:	4603      	mov	r3, r0
 8000634:	71fb      	strb	r3, [r7, #7]
 8000636:	460b      	mov	r3, r1
 8000638:	71bb      	strb	r3, [r7, #6]
 800063a:	4613      	mov	r3, r2
 800063c:	717b      	strb	r3, [r7, #5]

	switch (copy_eGPIO_Port)
 800063e:	79fb      	ldrb	r3, [r7, #7]
 8000640:	2b05      	cmp	r3, #5
 8000642:	f200 809f 	bhi.w	8000784 <MGPIO_vSetOutputPinSpeed+0x158>
 8000646:	a201      	add	r2, pc, #4	; (adr r2, 800064c <MGPIO_vSetOutputPinSpeed+0x20>)
 8000648:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800064c:	08000665 	.word	0x08000665
 8000650:	08000695 	.word	0x08000695
 8000654:	080006c5 	.word	0x080006c5
 8000658:	080006f5 	.word	0x080006f5
 800065c:	08000725 	.word	0x08000725
 8000660:	08000755 	.word	0x08000755
	{
	case PORTA:
		GPIOA->GPIO_OSPEEDR &= ~(0b11<<copy_eGPIO_Pin*2);
 8000664:	4b4a      	ldr	r3, [pc, #296]	; (8000790 <MGPIO_vSetOutputPinSpeed+0x164>)
 8000666:	689b      	ldr	r3, [r3, #8]
 8000668:	79ba      	ldrb	r2, [r7, #6]
 800066a:	0052      	lsls	r2, r2, #1
 800066c:	2103      	movs	r1, #3
 800066e:	fa01 f202 	lsl.w	r2, r1, r2
 8000672:	43d2      	mvns	r2, r2
 8000674:	4611      	mov	r1, r2
 8000676:	4a46      	ldr	r2, [pc, #280]	; (8000790 <MGPIO_vSetOutputPinSpeed+0x164>)
 8000678:	400b      	ands	r3, r1
 800067a:	6093      	str	r3, [r2, #8]
		GPIOA->GPIO_OSPEEDR |= (copy_GPIO_OSpeed<<copy_eGPIO_Pin*2);
 800067c:	4b44      	ldr	r3, [pc, #272]	; (8000790 <MGPIO_vSetOutputPinSpeed+0x164>)
 800067e:	689b      	ldr	r3, [r3, #8]
 8000680:	7979      	ldrb	r1, [r7, #5]
 8000682:	79ba      	ldrb	r2, [r7, #6]
 8000684:	0052      	lsls	r2, r2, #1
 8000686:	fa01 f202 	lsl.w	r2, r1, r2
 800068a:	4611      	mov	r1, r2
 800068c:	4a40      	ldr	r2, [pc, #256]	; (8000790 <MGPIO_vSetOutputPinSpeed+0x164>)
 800068e:	430b      	orrs	r3, r1
 8000690:	6093      	str	r3, [r2, #8]
		break;
 8000692:	e077      	b.n	8000784 <MGPIO_vSetOutputPinSpeed+0x158>
	case PORTB:
		GPIOB->GPIO_OSPEEDR &= ~(0b11<<copy_eGPIO_Pin*2);
 8000694:	4b3f      	ldr	r3, [pc, #252]	; (8000794 <MGPIO_vSetOutputPinSpeed+0x168>)
 8000696:	689b      	ldr	r3, [r3, #8]
 8000698:	79ba      	ldrb	r2, [r7, #6]
 800069a:	0052      	lsls	r2, r2, #1
 800069c:	2103      	movs	r1, #3
 800069e:	fa01 f202 	lsl.w	r2, r1, r2
 80006a2:	43d2      	mvns	r2, r2
 80006a4:	4611      	mov	r1, r2
 80006a6:	4a3b      	ldr	r2, [pc, #236]	; (8000794 <MGPIO_vSetOutputPinSpeed+0x168>)
 80006a8:	400b      	ands	r3, r1
 80006aa:	6093      	str	r3, [r2, #8]
		GPIOB->GPIO_OSPEEDR |= (copy_GPIO_OSpeed<<copy_eGPIO_Pin*2);
 80006ac:	4b39      	ldr	r3, [pc, #228]	; (8000794 <MGPIO_vSetOutputPinSpeed+0x168>)
 80006ae:	689b      	ldr	r3, [r3, #8]
 80006b0:	7979      	ldrb	r1, [r7, #5]
 80006b2:	79ba      	ldrb	r2, [r7, #6]
 80006b4:	0052      	lsls	r2, r2, #1
 80006b6:	fa01 f202 	lsl.w	r2, r1, r2
 80006ba:	4611      	mov	r1, r2
 80006bc:	4a35      	ldr	r2, [pc, #212]	; (8000794 <MGPIO_vSetOutputPinSpeed+0x168>)
 80006be:	430b      	orrs	r3, r1
 80006c0:	6093      	str	r3, [r2, #8]
		break;
 80006c2:	e05f      	b.n	8000784 <MGPIO_vSetOutputPinSpeed+0x158>
	case PORTC:
		GPIOC->GPIO_OSPEEDR &= ~(0b11<<copy_eGPIO_Pin*2);
 80006c4:	4b34      	ldr	r3, [pc, #208]	; (8000798 <MGPIO_vSetOutputPinSpeed+0x16c>)
 80006c6:	689b      	ldr	r3, [r3, #8]
 80006c8:	79ba      	ldrb	r2, [r7, #6]
 80006ca:	0052      	lsls	r2, r2, #1
 80006cc:	2103      	movs	r1, #3
 80006ce:	fa01 f202 	lsl.w	r2, r1, r2
 80006d2:	43d2      	mvns	r2, r2
 80006d4:	4611      	mov	r1, r2
 80006d6:	4a30      	ldr	r2, [pc, #192]	; (8000798 <MGPIO_vSetOutputPinSpeed+0x16c>)
 80006d8:	400b      	ands	r3, r1
 80006da:	6093      	str	r3, [r2, #8]
		GPIOC->GPIO_OSPEEDR |= (copy_GPIO_OSpeed<<copy_eGPIO_Pin*2);
 80006dc:	4b2e      	ldr	r3, [pc, #184]	; (8000798 <MGPIO_vSetOutputPinSpeed+0x16c>)
 80006de:	689b      	ldr	r3, [r3, #8]
 80006e0:	7979      	ldrb	r1, [r7, #5]
 80006e2:	79ba      	ldrb	r2, [r7, #6]
 80006e4:	0052      	lsls	r2, r2, #1
 80006e6:	fa01 f202 	lsl.w	r2, r1, r2
 80006ea:	4611      	mov	r1, r2
 80006ec:	4a2a      	ldr	r2, [pc, #168]	; (8000798 <MGPIO_vSetOutputPinSpeed+0x16c>)
 80006ee:	430b      	orrs	r3, r1
 80006f0:	6093      	str	r3, [r2, #8]
		break;
 80006f2:	e047      	b.n	8000784 <MGPIO_vSetOutputPinSpeed+0x158>
	case PORTD:
		GPIOD->GPIO_OSPEEDR &= ~(0b11<<copy_eGPIO_Pin*2);
 80006f4:	4b29      	ldr	r3, [pc, #164]	; (800079c <MGPIO_vSetOutputPinSpeed+0x170>)
 80006f6:	689b      	ldr	r3, [r3, #8]
 80006f8:	79ba      	ldrb	r2, [r7, #6]
 80006fa:	0052      	lsls	r2, r2, #1
 80006fc:	2103      	movs	r1, #3
 80006fe:	fa01 f202 	lsl.w	r2, r1, r2
 8000702:	43d2      	mvns	r2, r2
 8000704:	4611      	mov	r1, r2
 8000706:	4a25      	ldr	r2, [pc, #148]	; (800079c <MGPIO_vSetOutputPinSpeed+0x170>)
 8000708:	400b      	ands	r3, r1
 800070a:	6093      	str	r3, [r2, #8]
		GPIOD->GPIO_OSPEEDR |= (copy_GPIO_OSpeed<<copy_eGPIO_Pin*2);
 800070c:	4b23      	ldr	r3, [pc, #140]	; (800079c <MGPIO_vSetOutputPinSpeed+0x170>)
 800070e:	689b      	ldr	r3, [r3, #8]
 8000710:	7979      	ldrb	r1, [r7, #5]
 8000712:	79ba      	ldrb	r2, [r7, #6]
 8000714:	0052      	lsls	r2, r2, #1
 8000716:	fa01 f202 	lsl.w	r2, r1, r2
 800071a:	4611      	mov	r1, r2
 800071c:	4a1f      	ldr	r2, [pc, #124]	; (800079c <MGPIO_vSetOutputPinSpeed+0x170>)
 800071e:	430b      	orrs	r3, r1
 8000720:	6093      	str	r3, [r2, #8]
		break;
 8000722:	e02f      	b.n	8000784 <MGPIO_vSetOutputPinSpeed+0x158>
	case PORTE:
		GPIOE->GPIO_OSPEEDR &= ~(0b11<<copy_eGPIO_Pin*2);
 8000724:	4b1e      	ldr	r3, [pc, #120]	; (80007a0 <MGPIO_vSetOutputPinSpeed+0x174>)
 8000726:	689b      	ldr	r3, [r3, #8]
 8000728:	79ba      	ldrb	r2, [r7, #6]
 800072a:	0052      	lsls	r2, r2, #1
 800072c:	2103      	movs	r1, #3
 800072e:	fa01 f202 	lsl.w	r2, r1, r2
 8000732:	43d2      	mvns	r2, r2
 8000734:	4611      	mov	r1, r2
 8000736:	4a1a      	ldr	r2, [pc, #104]	; (80007a0 <MGPIO_vSetOutputPinSpeed+0x174>)
 8000738:	400b      	ands	r3, r1
 800073a:	6093      	str	r3, [r2, #8]
		GPIOE->GPIO_OSPEEDR |= (copy_GPIO_OSpeed<<copy_eGPIO_Pin*2);
 800073c:	4b18      	ldr	r3, [pc, #96]	; (80007a0 <MGPIO_vSetOutputPinSpeed+0x174>)
 800073e:	689b      	ldr	r3, [r3, #8]
 8000740:	7979      	ldrb	r1, [r7, #5]
 8000742:	79ba      	ldrb	r2, [r7, #6]
 8000744:	0052      	lsls	r2, r2, #1
 8000746:	fa01 f202 	lsl.w	r2, r1, r2
 800074a:	4611      	mov	r1, r2
 800074c:	4a14      	ldr	r2, [pc, #80]	; (80007a0 <MGPIO_vSetOutputPinSpeed+0x174>)
 800074e:	430b      	orrs	r3, r1
 8000750:	6093      	str	r3, [r2, #8]
		break;
 8000752:	e017      	b.n	8000784 <MGPIO_vSetOutputPinSpeed+0x158>
	case PORTH:
		GPIOH->GPIO_OSPEEDR &= ~(0b11<<copy_eGPIO_Pin*2);
 8000754:	4b13      	ldr	r3, [pc, #76]	; (80007a4 <MGPIO_vSetOutputPinSpeed+0x178>)
 8000756:	689b      	ldr	r3, [r3, #8]
 8000758:	79ba      	ldrb	r2, [r7, #6]
 800075a:	0052      	lsls	r2, r2, #1
 800075c:	2103      	movs	r1, #3
 800075e:	fa01 f202 	lsl.w	r2, r1, r2
 8000762:	43d2      	mvns	r2, r2
 8000764:	4611      	mov	r1, r2
 8000766:	4a0f      	ldr	r2, [pc, #60]	; (80007a4 <MGPIO_vSetOutputPinSpeed+0x178>)
 8000768:	400b      	ands	r3, r1
 800076a:	6093      	str	r3, [r2, #8]
		GPIOH->GPIO_OSPEEDR |= (copy_GPIO_OSpeed<<copy_eGPIO_Pin*2);
 800076c:	4b0d      	ldr	r3, [pc, #52]	; (80007a4 <MGPIO_vSetOutputPinSpeed+0x178>)
 800076e:	689b      	ldr	r3, [r3, #8]
 8000770:	7979      	ldrb	r1, [r7, #5]
 8000772:	79ba      	ldrb	r2, [r7, #6]
 8000774:	0052      	lsls	r2, r2, #1
 8000776:	fa01 f202 	lsl.w	r2, r1, r2
 800077a:	4611      	mov	r1, r2
 800077c:	4a09      	ldr	r2, [pc, #36]	; (80007a4 <MGPIO_vSetOutputPinSpeed+0x178>)
 800077e:	430b      	orrs	r3, r1
 8000780:	6093      	str	r3, [r2, #8]
		break;
 8000782:	bf00      	nop
	}

}
 8000784:	bf00      	nop
 8000786:	370c      	adds	r7, #12
 8000788:	46bd      	mov	sp, r7
 800078a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800078e:	4770      	bx	lr
 8000790:	40020000 	.word	0x40020000
 8000794:	40020400 	.word	0x40020400
 8000798:	40020800 	.word	0x40020800
 800079c:	40020c00 	.word	0x40020c00
 80007a0:	40021000 	.word	0x40021000
 80007a4:	40021c00 	.word	0x40021c00

080007a8 <MGPIO_vSetInputPinPullUpDown>:
void MGPIO_vSetInputPinPullUpDown(GPIO_Port_t copy_eGPIO_Port,GPIO_Pin_t copy_eGPIO_Pin,GPIO_PUPD_t copy_GPIO_PUPD)
{
 80007a8:	b480      	push	{r7}
 80007aa:	b083      	sub	sp, #12
 80007ac:	af00      	add	r7, sp, #0
 80007ae:	4603      	mov	r3, r0
 80007b0:	71fb      	strb	r3, [r7, #7]
 80007b2:	460b      	mov	r3, r1
 80007b4:	71bb      	strb	r3, [r7, #6]
 80007b6:	4613      	mov	r3, r2
 80007b8:	717b      	strb	r3, [r7, #5]
	switch (copy_eGPIO_Port)
 80007ba:	79fb      	ldrb	r3, [r7, #7]
 80007bc:	2b05      	cmp	r3, #5
 80007be:	f200 809f 	bhi.w	8000900 <MGPIO_vSetInputPinPullUpDown+0x158>
 80007c2:	a201      	add	r2, pc, #4	; (adr r2, 80007c8 <MGPIO_vSetInputPinPullUpDown+0x20>)
 80007c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007c8:	080007e1 	.word	0x080007e1
 80007cc:	08000811 	.word	0x08000811
 80007d0:	08000841 	.word	0x08000841
 80007d4:	08000871 	.word	0x08000871
 80007d8:	080008a1 	.word	0x080008a1
 80007dc:	080008d1 	.word	0x080008d1
	{
	case PORTA:
		GPIOA->GPIO_PUPDR &= ~(0b11<<copy_eGPIO_Pin*2);
 80007e0:	4b4a      	ldr	r3, [pc, #296]	; (800090c <MGPIO_vSetInputPinPullUpDown+0x164>)
 80007e2:	68db      	ldr	r3, [r3, #12]
 80007e4:	79ba      	ldrb	r2, [r7, #6]
 80007e6:	0052      	lsls	r2, r2, #1
 80007e8:	2103      	movs	r1, #3
 80007ea:	fa01 f202 	lsl.w	r2, r1, r2
 80007ee:	43d2      	mvns	r2, r2
 80007f0:	4611      	mov	r1, r2
 80007f2:	4a46      	ldr	r2, [pc, #280]	; (800090c <MGPIO_vSetInputPinPullUpDown+0x164>)
 80007f4:	400b      	ands	r3, r1
 80007f6:	60d3      	str	r3, [r2, #12]
		GPIOA->GPIO_PUPDR |= (copy_GPIO_PUPD<<copy_eGPIO_Pin*2);
 80007f8:	4b44      	ldr	r3, [pc, #272]	; (800090c <MGPIO_vSetInputPinPullUpDown+0x164>)
 80007fa:	68db      	ldr	r3, [r3, #12]
 80007fc:	7979      	ldrb	r1, [r7, #5]
 80007fe:	79ba      	ldrb	r2, [r7, #6]
 8000800:	0052      	lsls	r2, r2, #1
 8000802:	fa01 f202 	lsl.w	r2, r1, r2
 8000806:	4611      	mov	r1, r2
 8000808:	4a40      	ldr	r2, [pc, #256]	; (800090c <MGPIO_vSetInputPinPullUpDown+0x164>)
 800080a:	430b      	orrs	r3, r1
 800080c:	60d3      	str	r3, [r2, #12]
		break;
 800080e:	e077      	b.n	8000900 <MGPIO_vSetInputPinPullUpDown+0x158>
	case PORTB:
		GPIOB->GPIO_PUPDR &= ~(0b11<<copy_eGPIO_Pin*2);
 8000810:	4b3f      	ldr	r3, [pc, #252]	; (8000910 <MGPIO_vSetInputPinPullUpDown+0x168>)
 8000812:	68db      	ldr	r3, [r3, #12]
 8000814:	79ba      	ldrb	r2, [r7, #6]
 8000816:	0052      	lsls	r2, r2, #1
 8000818:	2103      	movs	r1, #3
 800081a:	fa01 f202 	lsl.w	r2, r1, r2
 800081e:	43d2      	mvns	r2, r2
 8000820:	4611      	mov	r1, r2
 8000822:	4a3b      	ldr	r2, [pc, #236]	; (8000910 <MGPIO_vSetInputPinPullUpDown+0x168>)
 8000824:	400b      	ands	r3, r1
 8000826:	60d3      	str	r3, [r2, #12]
		GPIOB->GPIO_PUPDR |= (copy_GPIO_PUPD<<copy_eGPIO_Pin*2);
 8000828:	4b39      	ldr	r3, [pc, #228]	; (8000910 <MGPIO_vSetInputPinPullUpDown+0x168>)
 800082a:	68db      	ldr	r3, [r3, #12]
 800082c:	7979      	ldrb	r1, [r7, #5]
 800082e:	79ba      	ldrb	r2, [r7, #6]
 8000830:	0052      	lsls	r2, r2, #1
 8000832:	fa01 f202 	lsl.w	r2, r1, r2
 8000836:	4611      	mov	r1, r2
 8000838:	4a35      	ldr	r2, [pc, #212]	; (8000910 <MGPIO_vSetInputPinPullUpDown+0x168>)
 800083a:	430b      	orrs	r3, r1
 800083c:	60d3      	str	r3, [r2, #12]
		break;
 800083e:	e05f      	b.n	8000900 <MGPIO_vSetInputPinPullUpDown+0x158>
	case PORTC:
		GPIOC->GPIO_PUPDR &= ~(0b11<<copy_eGPIO_Pin*2);
 8000840:	4b34      	ldr	r3, [pc, #208]	; (8000914 <MGPIO_vSetInputPinPullUpDown+0x16c>)
 8000842:	68db      	ldr	r3, [r3, #12]
 8000844:	79ba      	ldrb	r2, [r7, #6]
 8000846:	0052      	lsls	r2, r2, #1
 8000848:	2103      	movs	r1, #3
 800084a:	fa01 f202 	lsl.w	r2, r1, r2
 800084e:	43d2      	mvns	r2, r2
 8000850:	4611      	mov	r1, r2
 8000852:	4a30      	ldr	r2, [pc, #192]	; (8000914 <MGPIO_vSetInputPinPullUpDown+0x16c>)
 8000854:	400b      	ands	r3, r1
 8000856:	60d3      	str	r3, [r2, #12]
		GPIOC->GPIO_PUPDR |= (copy_GPIO_PUPD<<copy_eGPIO_Pin*2);
 8000858:	4b2e      	ldr	r3, [pc, #184]	; (8000914 <MGPIO_vSetInputPinPullUpDown+0x16c>)
 800085a:	68db      	ldr	r3, [r3, #12]
 800085c:	7979      	ldrb	r1, [r7, #5]
 800085e:	79ba      	ldrb	r2, [r7, #6]
 8000860:	0052      	lsls	r2, r2, #1
 8000862:	fa01 f202 	lsl.w	r2, r1, r2
 8000866:	4611      	mov	r1, r2
 8000868:	4a2a      	ldr	r2, [pc, #168]	; (8000914 <MGPIO_vSetInputPinPullUpDown+0x16c>)
 800086a:	430b      	orrs	r3, r1
 800086c:	60d3      	str	r3, [r2, #12]
		break;
 800086e:	e047      	b.n	8000900 <MGPIO_vSetInputPinPullUpDown+0x158>
	case PORTD:
		GPIOD->GPIO_PUPDR &= ~(0b11<<copy_eGPIO_Pin*2);
 8000870:	4b29      	ldr	r3, [pc, #164]	; (8000918 <MGPIO_vSetInputPinPullUpDown+0x170>)
 8000872:	68db      	ldr	r3, [r3, #12]
 8000874:	79ba      	ldrb	r2, [r7, #6]
 8000876:	0052      	lsls	r2, r2, #1
 8000878:	2103      	movs	r1, #3
 800087a:	fa01 f202 	lsl.w	r2, r1, r2
 800087e:	43d2      	mvns	r2, r2
 8000880:	4611      	mov	r1, r2
 8000882:	4a25      	ldr	r2, [pc, #148]	; (8000918 <MGPIO_vSetInputPinPullUpDown+0x170>)
 8000884:	400b      	ands	r3, r1
 8000886:	60d3      	str	r3, [r2, #12]
		GPIOD->GPIO_PUPDR |= (copy_GPIO_PUPD<<copy_eGPIO_Pin*2);
 8000888:	4b23      	ldr	r3, [pc, #140]	; (8000918 <MGPIO_vSetInputPinPullUpDown+0x170>)
 800088a:	68db      	ldr	r3, [r3, #12]
 800088c:	7979      	ldrb	r1, [r7, #5]
 800088e:	79ba      	ldrb	r2, [r7, #6]
 8000890:	0052      	lsls	r2, r2, #1
 8000892:	fa01 f202 	lsl.w	r2, r1, r2
 8000896:	4611      	mov	r1, r2
 8000898:	4a1f      	ldr	r2, [pc, #124]	; (8000918 <MGPIO_vSetInputPinPullUpDown+0x170>)
 800089a:	430b      	orrs	r3, r1
 800089c:	60d3      	str	r3, [r2, #12]
		break;
 800089e:	e02f      	b.n	8000900 <MGPIO_vSetInputPinPullUpDown+0x158>
	case PORTE:
		GPIOE->GPIO_PUPDR &= ~(0b11<<copy_eGPIO_Pin*2);
 80008a0:	4b1e      	ldr	r3, [pc, #120]	; (800091c <MGPIO_vSetInputPinPullUpDown+0x174>)
 80008a2:	68db      	ldr	r3, [r3, #12]
 80008a4:	79ba      	ldrb	r2, [r7, #6]
 80008a6:	0052      	lsls	r2, r2, #1
 80008a8:	2103      	movs	r1, #3
 80008aa:	fa01 f202 	lsl.w	r2, r1, r2
 80008ae:	43d2      	mvns	r2, r2
 80008b0:	4611      	mov	r1, r2
 80008b2:	4a1a      	ldr	r2, [pc, #104]	; (800091c <MGPIO_vSetInputPinPullUpDown+0x174>)
 80008b4:	400b      	ands	r3, r1
 80008b6:	60d3      	str	r3, [r2, #12]
		GPIOE->GPIO_PUPDR |= (copy_GPIO_PUPD<<copy_eGPIO_Pin*2);
 80008b8:	4b18      	ldr	r3, [pc, #96]	; (800091c <MGPIO_vSetInputPinPullUpDown+0x174>)
 80008ba:	68db      	ldr	r3, [r3, #12]
 80008bc:	7979      	ldrb	r1, [r7, #5]
 80008be:	79ba      	ldrb	r2, [r7, #6]
 80008c0:	0052      	lsls	r2, r2, #1
 80008c2:	fa01 f202 	lsl.w	r2, r1, r2
 80008c6:	4611      	mov	r1, r2
 80008c8:	4a14      	ldr	r2, [pc, #80]	; (800091c <MGPIO_vSetInputPinPullUpDown+0x174>)
 80008ca:	430b      	orrs	r3, r1
 80008cc:	60d3      	str	r3, [r2, #12]
		break;
 80008ce:	e017      	b.n	8000900 <MGPIO_vSetInputPinPullUpDown+0x158>
	case PORTH:
		GPIOH->GPIO_PUPDR &= ~(0b11<<copy_eGPIO_Pin*2);
 80008d0:	4b13      	ldr	r3, [pc, #76]	; (8000920 <MGPIO_vSetInputPinPullUpDown+0x178>)
 80008d2:	68db      	ldr	r3, [r3, #12]
 80008d4:	79ba      	ldrb	r2, [r7, #6]
 80008d6:	0052      	lsls	r2, r2, #1
 80008d8:	2103      	movs	r1, #3
 80008da:	fa01 f202 	lsl.w	r2, r1, r2
 80008de:	43d2      	mvns	r2, r2
 80008e0:	4611      	mov	r1, r2
 80008e2:	4a0f      	ldr	r2, [pc, #60]	; (8000920 <MGPIO_vSetInputPinPullUpDown+0x178>)
 80008e4:	400b      	ands	r3, r1
 80008e6:	60d3      	str	r3, [r2, #12]
		GPIOH->GPIO_PUPDR |= (copy_GPIO_PUPD<<copy_eGPIO_Pin*2);
 80008e8:	4b0d      	ldr	r3, [pc, #52]	; (8000920 <MGPIO_vSetInputPinPullUpDown+0x178>)
 80008ea:	68db      	ldr	r3, [r3, #12]
 80008ec:	7979      	ldrb	r1, [r7, #5]
 80008ee:	79ba      	ldrb	r2, [r7, #6]
 80008f0:	0052      	lsls	r2, r2, #1
 80008f2:	fa01 f202 	lsl.w	r2, r1, r2
 80008f6:	4611      	mov	r1, r2
 80008f8:	4a09      	ldr	r2, [pc, #36]	; (8000920 <MGPIO_vSetInputPinPullUpDown+0x178>)
 80008fa:	430b      	orrs	r3, r1
 80008fc:	60d3      	str	r3, [r2, #12]
		break;
 80008fe:	bf00      	nop
	}

}
 8000900:	bf00      	nop
 8000902:	370c      	adds	r7, #12
 8000904:	46bd      	mov	sp, r7
 8000906:	f85d 7b04 	ldr.w	r7, [sp], #4
 800090a:	4770      	bx	lr
 800090c:	40020000 	.word	0x40020000
 8000910:	40020400 	.word	0x40020400
 8000914:	40020800 	.word	0x40020800
 8000918:	40020c00 	.word	0x40020c00
 800091c:	40021000 	.word	0x40021000
 8000920:	40021c00 	.word	0x40021c00

08000924 <MGPIO_vSetOutputPinValueBSR>:
		break;
	}

}
void MGPIO_vSetOutputPinValueBSR(GPIO_Port_t copy_eGPIO_Port,GPIO_Pin_t copy_eGPIO_Pin,GPIO_BS_t copy_GPIO_BS)
{
 8000924:	b480      	push	{r7}
 8000926:	b083      	sub	sp, #12
 8000928:	af00      	add	r7, sp, #0
 800092a:	4603      	mov	r3, r0
 800092c:	71fb      	strb	r3, [r7, #7]
 800092e:	460b      	mov	r3, r1
 8000930:	71bb      	strb	r3, [r7, #6]
 8000932:	4613      	mov	r3, r2
 8000934:	717b      	strb	r3, [r7, #5]
	switch (copy_eGPIO_Port)
 8000936:	79fb      	ldrb	r3, [r7, #7]
 8000938:	2b05      	cmp	r3, #5
 800093a:	f200 80ca 	bhi.w	8000ad2 <MGPIO_vSetOutputPinValueBSR+0x1ae>
 800093e:	a201      	add	r2, pc, #4	; (adr r2, 8000944 <MGPIO_vSetOutputPinValueBSR+0x20>)
 8000940:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000944:	0800095d 	.word	0x0800095d
 8000948:	08000999 	.word	0x08000999
 800094c:	080009d5 	.word	0x080009d5
 8000950:	08000a0f 	.word	0x08000a0f
 8000954:	08000a49 	.word	0x08000a49
 8000958:	08000a83 	.word	0x08000a83
	{
	case PORTA:
		if (copy_GPIO_BS == SET)
 800095c:	797b      	ldrb	r3, [r7, #5]
 800095e:	2b01      	cmp	r3, #1
 8000960:	d10a      	bne.n	8000978 <MGPIO_vSetOutputPinValueBSR+0x54>
		{
			GPIOA->GPIO_BSRR |= (1<<copy_eGPIO_Pin);
 8000962:	4b5f      	ldr	r3, [pc, #380]	; (8000ae0 <MGPIO_vSetOutputPinValueBSR+0x1bc>)
 8000964:	699b      	ldr	r3, [r3, #24]
 8000966:	79ba      	ldrb	r2, [r7, #6]
 8000968:	2101      	movs	r1, #1
 800096a:	fa01 f202 	lsl.w	r2, r1, r2
 800096e:	4611      	mov	r1, r2
 8000970:	4a5b      	ldr	r2, [pc, #364]	; (8000ae0 <MGPIO_vSetOutputPinValueBSR+0x1bc>)
 8000972:	430b      	orrs	r3, r1
 8000974:	6193      	str	r3, [r2, #24]
		}
		else if(copy_GPIO_BS == RESET)
		{
			GPIOA->GPIO_BSRR |= (1<<(copy_eGPIO_Pin+16));
		}
		break;
 8000976:	e0a1      	b.n	8000abc <MGPIO_vSetOutputPinValueBSR+0x198>
		else if(copy_GPIO_BS == RESET)
 8000978:	797b      	ldrb	r3, [r7, #5]
 800097a:	2b00      	cmp	r3, #0
 800097c:	f040 809e 	bne.w	8000abc <MGPIO_vSetOutputPinValueBSR+0x198>
			GPIOA->GPIO_BSRR |= (1<<(copy_eGPIO_Pin+16));
 8000980:	4b57      	ldr	r3, [pc, #348]	; (8000ae0 <MGPIO_vSetOutputPinValueBSR+0x1bc>)
 8000982:	699b      	ldr	r3, [r3, #24]
 8000984:	79ba      	ldrb	r2, [r7, #6]
 8000986:	3210      	adds	r2, #16
 8000988:	2101      	movs	r1, #1
 800098a:	fa01 f202 	lsl.w	r2, r1, r2
 800098e:	4611      	mov	r1, r2
 8000990:	4a53      	ldr	r2, [pc, #332]	; (8000ae0 <MGPIO_vSetOutputPinValueBSR+0x1bc>)
 8000992:	430b      	orrs	r3, r1
 8000994:	6193      	str	r3, [r2, #24]
		break;
 8000996:	e091      	b.n	8000abc <MGPIO_vSetOutputPinValueBSR+0x198>
	case PORTB:
		if (copy_GPIO_BS == SET)
 8000998:	797b      	ldrb	r3, [r7, #5]
 800099a:	2b01      	cmp	r3, #1
 800099c:	d10a      	bne.n	80009b4 <MGPIO_vSetOutputPinValueBSR+0x90>
		{
			GPIOB->GPIO_BSRR |= (1<<copy_eGPIO_Pin);
 800099e:	4b51      	ldr	r3, [pc, #324]	; (8000ae4 <MGPIO_vSetOutputPinValueBSR+0x1c0>)
 80009a0:	699b      	ldr	r3, [r3, #24]
 80009a2:	79ba      	ldrb	r2, [r7, #6]
 80009a4:	2101      	movs	r1, #1
 80009a6:	fa01 f202 	lsl.w	r2, r1, r2
 80009aa:	4611      	mov	r1, r2
 80009ac:	4a4d      	ldr	r2, [pc, #308]	; (8000ae4 <MGPIO_vSetOutputPinValueBSR+0x1c0>)
 80009ae:	430b      	orrs	r3, r1
 80009b0:	6193      	str	r3, [r2, #24]
		}
		else if(copy_GPIO_BS == RESET)
		{
			GPIOB->GPIO_BSRR |= (1<<(copy_eGPIO_Pin+16));
		}		break;
 80009b2:	e085      	b.n	8000ac0 <MGPIO_vSetOutputPinValueBSR+0x19c>
		else if(copy_GPIO_BS == RESET)
 80009b4:	797b      	ldrb	r3, [r7, #5]
 80009b6:	2b00      	cmp	r3, #0
 80009b8:	f040 8082 	bne.w	8000ac0 <MGPIO_vSetOutputPinValueBSR+0x19c>
			GPIOB->GPIO_BSRR |= (1<<(copy_eGPIO_Pin+16));
 80009bc:	4b49      	ldr	r3, [pc, #292]	; (8000ae4 <MGPIO_vSetOutputPinValueBSR+0x1c0>)
 80009be:	699b      	ldr	r3, [r3, #24]
 80009c0:	79ba      	ldrb	r2, [r7, #6]
 80009c2:	3210      	adds	r2, #16
 80009c4:	2101      	movs	r1, #1
 80009c6:	fa01 f202 	lsl.w	r2, r1, r2
 80009ca:	4611      	mov	r1, r2
 80009cc:	4a45      	ldr	r2, [pc, #276]	; (8000ae4 <MGPIO_vSetOutputPinValueBSR+0x1c0>)
 80009ce:	430b      	orrs	r3, r1
 80009d0:	6193      	str	r3, [r2, #24]
		}		break;
 80009d2:	e075      	b.n	8000ac0 <MGPIO_vSetOutputPinValueBSR+0x19c>
	case PORTC:
		if (copy_GPIO_BS == SET)
 80009d4:	797b      	ldrb	r3, [r7, #5]
 80009d6:	2b01      	cmp	r3, #1
 80009d8:	d10a      	bne.n	80009f0 <MGPIO_vSetOutputPinValueBSR+0xcc>
		{
			GPIOB->GPIO_BSRR |= (1<<copy_eGPIO_Pin);
 80009da:	4b42      	ldr	r3, [pc, #264]	; (8000ae4 <MGPIO_vSetOutputPinValueBSR+0x1c0>)
 80009dc:	699b      	ldr	r3, [r3, #24]
 80009de:	79ba      	ldrb	r2, [r7, #6]
 80009e0:	2101      	movs	r1, #1
 80009e2:	fa01 f202 	lsl.w	r2, r1, r2
 80009e6:	4611      	mov	r1, r2
 80009e8:	4a3e      	ldr	r2, [pc, #248]	; (8000ae4 <MGPIO_vSetOutputPinValueBSR+0x1c0>)
 80009ea:	430b      	orrs	r3, r1
 80009ec:	6193      	str	r3, [r2, #24]
		}
		else if(copy_GPIO_BS == RESET)
		{
			GPIOB->GPIO_BSRR |= (1<<(copy_eGPIO_Pin+16));
		}		break;
 80009ee:	e069      	b.n	8000ac4 <MGPIO_vSetOutputPinValueBSR+0x1a0>
		else if(copy_GPIO_BS == RESET)
 80009f0:	797b      	ldrb	r3, [r7, #5]
 80009f2:	2b00      	cmp	r3, #0
 80009f4:	d166      	bne.n	8000ac4 <MGPIO_vSetOutputPinValueBSR+0x1a0>
			GPIOB->GPIO_BSRR |= (1<<(copy_eGPIO_Pin+16));
 80009f6:	4b3b      	ldr	r3, [pc, #236]	; (8000ae4 <MGPIO_vSetOutputPinValueBSR+0x1c0>)
 80009f8:	699b      	ldr	r3, [r3, #24]
 80009fa:	79ba      	ldrb	r2, [r7, #6]
 80009fc:	3210      	adds	r2, #16
 80009fe:	2101      	movs	r1, #1
 8000a00:	fa01 f202 	lsl.w	r2, r1, r2
 8000a04:	4611      	mov	r1, r2
 8000a06:	4a37      	ldr	r2, [pc, #220]	; (8000ae4 <MGPIO_vSetOutputPinValueBSR+0x1c0>)
 8000a08:	430b      	orrs	r3, r1
 8000a0a:	6193      	str	r3, [r2, #24]
		}		break;
 8000a0c:	e05a      	b.n	8000ac4 <MGPIO_vSetOutputPinValueBSR+0x1a0>
	case PORTD:
		if (copy_GPIO_BS == SET)
 8000a0e:	797b      	ldrb	r3, [r7, #5]
 8000a10:	2b01      	cmp	r3, #1
 8000a12:	d10a      	bne.n	8000a2a <MGPIO_vSetOutputPinValueBSR+0x106>
		{
			GPIOD->GPIO_BSRR |= (1<<copy_eGPIO_Pin);
 8000a14:	4b34      	ldr	r3, [pc, #208]	; (8000ae8 <MGPIO_vSetOutputPinValueBSR+0x1c4>)
 8000a16:	699b      	ldr	r3, [r3, #24]
 8000a18:	79ba      	ldrb	r2, [r7, #6]
 8000a1a:	2101      	movs	r1, #1
 8000a1c:	fa01 f202 	lsl.w	r2, r1, r2
 8000a20:	4611      	mov	r1, r2
 8000a22:	4a31      	ldr	r2, [pc, #196]	; (8000ae8 <MGPIO_vSetOutputPinValueBSR+0x1c4>)
 8000a24:	430b      	orrs	r3, r1
 8000a26:	6193      	str	r3, [r2, #24]
		}
		else if(copy_GPIO_BS == RESET)
		{
			GPIOD->GPIO_BSRR |= (1<<(copy_eGPIO_Pin+16));
		}		break;
 8000a28:	e04e      	b.n	8000ac8 <MGPIO_vSetOutputPinValueBSR+0x1a4>
		else if(copy_GPIO_BS == RESET)
 8000a2a:	797b      	ldrb	r3, [r7, #5]
 8000a2c:	2b00      	cmp	r3, #0
 8000a2e:	d14b      	bne.n	8000ac8 <MGPIO_vSetOutputPinValueBSR+0x1a4>
			GPIOD->GPIO_BSRR |= (1<<(copy_eGPIO_Pin+16));
 8000a30:	4b2d      	ldr	r3, [pc, #180]	; (8000ae8 <MGPIO_vSetOutputPinValueBSR+0x1c4>)
 8000a32:	699b      	ldr	r3, [r3, #24]
 8000a34:	79ba      	ldrb	r2, [r7, #6]
 8000a36:	3210      	adds	r2, #16
 8000a38:	2101      	movs	r1, #1
 8000a3a:	fa01 f202 	lsl.w	r2, r1, r2
 8000a3e:	4611      	mov	r1, r2
 8000a40:	4a29      	ldr	r2, [pc, #164]	; (8000ae8 <MGPIO_vSetOutputPinValueBSR+0x1c4>)
 8000a42:	430b      	orrs	r3, r1
 8000a44:	6193      	str	r3, [r2, #24]
		}		break;
 8000a46:	e03f      	b.n	8000ac8 <MGPIO_vSetOutputPinValueBSR+0x1a4>
	case PORTE:
		if (copy_GPIO_BS == SET)
 8000a48:	797b      	ldrb	r3, [r7, #5]
 8000a4a:	2b01      	cmp	r3, #1
 8000a4c:	d10a      	bne.n	8000a64 <MGPIO_vSetOutputPinValueBSR+0x140>
		{
			GPIOE->GPIO_BSRR |= (1<<copy_eGPIO_Pin);
 8000a4e:	4b27      	ldr	r3, [pc, #156]	; (8000aec <MGPIO_vSetOutputPinValueBSR+0x1c8>)
 8000a50:	699b      	ldr	r3, [r3, #24]
 8000a52:	79ba      	ldrb	r2, [r7, #6]
 8000a54:	2101      	movs	r1, #1
 8000a56:	fa01 f202 	lsl.w	r2, r1, r2
 8000a5a:	4611      	mov	r1, r2
 8000a5c:	4a23      	ldr	r2, [pc, #140]	; (8000aec <MGPIO_vSetOutputPinValueBSR+0x1c8>)
 8000a5e:	430b      	orrs	r3, r1
 8000a60:	6193      	str	r3, [r2, #24]
		}
		else if(copy_GPIO_BS == RESET)
		{
			GPIOE->GPIO_BSRR |= (1<<(copy_eGPIO_Pin+16));
		}		break;
 8000a62:	e033      	b.n	8000acc <MGPIO_vSetOutputPinValueBSR+0x1a8>
		else if(copy_GPIO_BS == RESET)
 8000a64:	797b      	ldrb	r3, [r7, #5]
 8000a66:	2b00      	cmp	r3, #0
 8000a68:	d130      	bne.n	8000acc <MGPIO_vSetOutputPinValueBSR+0x1a8>
			GPIOE->GPIO_BSRR |= (1<<(copy_eGPIO_Pin+16));
 8000a6a:	4b20      	ldr	r3, [pc, #128]	; (8000aec <MGPIO_vSetOutputPinValueBSR+0x1c8>)
 8000a6c:	699b      	ldr	r3, [r3, #24]
 8000a6e:	79ba      	ldrb	r2, [r7, #6]
 8000a70:	3210      	adds	r2, #16
 8000a72:	2101      	movs	r1, #1
 8000a74:	fa01 f202 	lsl.w	r2, r1, r2
 8000a78:	4611      	mov	r1, r2
 8000a7a:	4a1c      	ldr	r2, [pc, #112]	; (8000aec <MGPIO_vSetOutputPinValueBSR+0x1c8>)
 8000a7c:	430b      	orrs	r3, r1
 8000a7e:	6193      	str	r3, [r2, #24]
		}		break;
 8000a80:	e024      	b.n	8000acc <MGPIO_vSetOutputPinValueBSR+0x1a8>
	case PORTH:
		if (copy_GPIO_BS == SET)
 8000a82:	797b      	ldrb	r3, [r7, #5]
 8000a84:	2b01      	cmp	r3, #1
 8000a86:	d10a      	bne.n	8000a9e <MGPIO_vSetOutputPinValueBSR+0x17a>
		{
			GPIOH->GPIO_BSRR |= (1<<copy_eGPIO_Pin);
 8000a88:	4b19      	ldr	r3, [pc, #100]	; (8000af0 <MGPIO_vSetOutputPinValueBSR+0x1cc>)
 8000a8a:	699b      	ldr	r3, [r3, #24]
 8000a8c:	79ba      	ldrb	r2, [r7, #6]
 8000a8e:	2101      	movs	r1, #1
 8000a90:	fa01 f202 	lsl.w	r2, r1, r2
 8000a94:	4611      	mov	r1, r2
 8000a96:	4a16      	ldr	r2, [pc, #88]	; (8000af0 <MGPIO_vSetOutputPinValueBSR+0x1cc>)
 8000a98:	430b      	orrs	r3, r1
 8000a9a:	6193      	str	r3, [r2, #24]
		}
		else if(copy_GPIO_BS == RESET)
		{
			GPIOH->GPIO_BSRR |= (1<<(copy_eGPIO_Pin+16));
		}		break;
 8000a9c:	e018      	b.n	8000ad0 <MGPIO_vSetOutputPinValueBSR+0x1ac>
		else if(copy_GPIO_BS == RESET)
 8000a9e:	797b      	ldrb	r3, [r7, #5]
 8000aa0:	2b00      	cmp	r3, #0
 8000aa2:	d115      	bne.n	8000ad0 <MGPIO_vSetOutputPinValueBSR+0x1ac>
			GPIOH->GPIO_BSRR |= (1<<(copy_eGPIO_Pin+16));
 8000aa4:	4b12      	ldr	r3, [pc, #72]	; (8000af0 <MGPIO_vSetOutputPinValueBSR+0x1cc>)
 8000aa6:	699b      	ldr	r3, [r3, #24]
 8000aa8:	79ba      	ldrb	r2, [r7, #6]
 8000aaa:	3210      	adds	r2, #16
 8000aac:	2101      	movs	r1, #1
 8000aae:	fa01 f202 	lsl.w	r2, r1, r2
 8000ab2:	4611      	mov	r1, r2
 8000ab4:	4a0e      	ldr	r2, [pc, #56]	; (8000af0 <MGPIO_vSetOutputPinValueBSR+0x1cc>)
 8000ab6:	430b      	orrs	r3, r1
 8000ab8:	6193      	str	r3, [r2, #24]
		}		break;
 8000aba:	e009      	b.n	8000ad0 <MGPIO_vSetOutputPinValueBSR+0x1ac>
		break;
 8000abc:	bf00      	nop
 8000abe:	e008      	b.n	8000ad2 <MGPIO_vSetOutputPinValueBSR+0x1ae>
		}		break;
 8000ac0:	bf00      	nop
 8000ac2:	e006      	b.n	8000ad2 <MGPIO_vSetOutputPinValueBSR+0x1ae>
		}		break;
 8000ac4:	bf00      	nop
 8000ac6:	e004      	b.n	8000ad2 <MGPIO_vSetOutputPinValueBSR+0x1ae>
		}		break;
 8000ac8:	bf00      	nop
 8000aca:	e002      	b.n	8000ad2 <MGPIO_vSetOutputPinValueBSR+0x1ae>
		}		break;
 8000acc:	bf00      	nop
 8000ace:	e000      	b.n	8000ad2 <MGPIO_vSetOutputPinValueBSR+0x1ae>
		}		break;
 8000ad0:	bf00      	nop
	}

}
 8000ad2:	bf00      	nop
 8000ad4:	370c      	adds	r7, #12
 8000ad6:	46bd      	mov	sp, r7
 8000ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000adc:	4770      	bx	lr
 8000ade:	bf00      	nop
 8000ae0:	40020000 	.word	0x40020000
 8000ae4:	40020400 	.word	0x40020400
 8000ae8:	40020c00 	.word	0x40020c00
 8000aec:	40021000 	.word	0x40021000
 8000af0:	40021c00 	.word	0x40021c00

08000af4 <MGPIO_vSetPinLockSTS>:
void MGPIO_vSetPinLockSTS(GPIO_Port_t copy_eGPIO_Port,GPIO_Pin_t copy_eGPIO_Pin,GPIO_LCK_t copy_GPIO_LCK)
{
 8000af4:	b480      	push	{r7}
 8000af6:	b083      	sub	sp, #12
 8000af8:	af00      	add	r7, sp, #0
 8000afa:	4603      	mov	r3, r0
 8000afc:	71fb      	strb	r3, [r7, #7]
 8000afe:	460b      	mov	r3, r1
 8000b00:	71bb      	strb	r3, [r7, #6]
 8000b02:	4613      	mov	r3, r2
 8000b04:	717b      	strb	r3, [r7, #5]
	switch (copy_eGPIO_Port)
 8000b06:	79fb      	ldrb	r3, [r7, #7]
 8000b08:	2b05      	cmp	r3, #5
 8000b0a:	f200 8093 	bhi.w	8000c34 <MGPIO_vSetPinLockSTS+0x140>
 8000b0e:	a201      	add	r2, pc, #4	; (adr r2, 8000b14 <MGPIO_vSetPinLockSTS+0x20>)
 8000b10:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000b14:	08000b2d 	.word	0x08000b2d
 8000b18:	08000b59 	.word	0x08000b59
 8000b1c:	08000b85 	.word	0x08000b85
 8000b20:	08000bb1 	.word	0x08000bb1
 8000b24:	08000bdd 	.word	0x08000bdd
 8000b28:	08000c09 	.word	0x08000c09
	{
	case PORTA:
		GPIOA->GPIO_LCKR &= ~(0b1<<copy_eGPIO_Pin);
 8000b2c:	4b44      	ldr	r3, [pc, #272]	; (8000c40 <MGPIO_vSetPinLockSTS+0x14c>)
 8000b2e:	69db      	ldr	r3, [r3, #28]
 8000b30:	79ba      	ldrb	r2, [r7, #6]
 8000b32:	2101      	movs	r1, #1
 8000b34:	fa01 f202 	lsl.w	r2, r1, r2
 8000b38:	43d2      	mvns	r2, r2
 8000b3a:	4611      	mov	r1, r2
 8000b3c:	4a40      	ldr	r2, [pc, #256]	; (8000c40 <MGPIO_vSetPinLockSTS+0x14c>)
 8000b3e:	400b      	ands	r3, r1
 8000b40:	61d3      	str	r3, [r2, #28]
		GPIOA->GPIO_LCKR |= (copy_GPIO_LCK<<copy_eGPIO_Pin);
 8000b42:	4b3f      	ldr	r3, [pc, #252]	; (8000c40 <MGPIO_vSetPinLockSTS+0x14c>)
 8000b44:	69db      	ldr	r3, [r3, #28]
 8000b46:	7979      	ldrb	r1, [r7, #5]
 8000b48:	79ba      	ldrb	r2, [r7, #6]
 8000b4a:	fa01 f202 	lsl.w	r2, r1, r2
 8000b4e:	4611      	mov	r1, r2
 8000b50:	4a3b      	ldr	r2, [pc, #236]	; (8000c40 <MGPIO_vSetPinLockSTS+0x14c>)
 8000b52:	430b      	orrs	r3, r1
 8000b54:	61d3      	str	r3, [r2, #28]
		break;
 8000b56:	e06d      	b.n	8000c34 <MGPIO_vSetPinLockSTS+0x140>
	case PORTB:
		GPIOB->GPIO_LCKR &= ~(0b1<<copy_eGPIO_Pin);
 8000b58:	4b3a      	ldr	r3, [pc, #232]	; (8000c44 <MGPIO_vSetPinLockSTS+0x150>)
 8000b5a:	69db      	ldr	r3, [r3, #28]
 8000b5c:	79ba      	ldrb	r2, [r7, #6]
 8000b5e:	2101      	movs	r1, #1
 8000b60:	fa01 f202 	lsl.w	r2, r1, r2
 8000b64:	43d2      	mvns	r2, r2
 8000b66:	4611      	mov	r1, r2
 8000b68:	4a36      	ldr	r2, [pc, #216]	; (8000c44 <MGPIO_vSetPinLockSTS+0x150>)
 8000b6a:	400b      	ands	r3, r1
 8000b6c:	61d3      	str	r3, [r2, #28]
		GPIOB->GPIO_LCKR |= (copy_GPIO_LCK<<copy_eGPIO_Pin);
 8000b6e:	4b35      	ldr	r3, [pc, #212]	; (8000c44 <MGPIO_vSetPinLockSTS+0x150>)
 8000b70:	69db      	ldr	r3, [r3, #28]
 8000b72:	7979      	ldrb	r1, [r7, #5]
 8000b74:	79ba      	ldrb	r2, [r7, #6]
 8000b76:	fa01 f202 	lsl.w	r2, r1, r2
 8000b7a:	4611      	mov	r1, r2
 8000b7c:	4a31      	ldr	r2, [pc, #196]	; (8000c44 <MGPIO_vSetPinLockSTS+0x150>)
 8000b7e:	430b      	orrs	r3, r1
 8000b80:	61d3      	str	r3, [r2, #28]
		break;
 8000b82:	e057      	b.n	8000c34 <MGPIO_vSetPinLockSTS+0x140>
	case PORTC:
		GPIOC->GPIO_LCKR &= ~(0b1<<copy_eGPIO_Pin);
 8000b84:	4b30      	ldr	r3, [pc, #192]	; (8000c48 <MGPIO_vSetPinLockSTS+0x154>)
 8000b86:	69db      	ldr	r3, [r3, #28]
 8000b88:	79ba      	ldrb	r2, [r7, #6]
 8000b8a:	2101      	movs	r1, #1
 8000b8c:	fa01 f202 	lsl.w	r2, r1, r2
 8000b90:	43d2      	mvns	r2, r2
 8000b92:	4611      	mov	r1, r2
 8000b94:	4a2c      	ldr	r2, [pc, #176]	; (8000c48 <MGPIO_vSetPinLockSTS+0x154>)
 8000b96:	400b      	ands	r3, r1
 8000b98:	61d3      	str	r3, [r2, #28]
		GPIOC->GPIO_LCKR |= (copy_GPIO_LCK<<copy_eGPIO_Pin);
 8000b9a:	4b2b      	ldr	r3, [pc, #172]	; (8000c48 <MGPIO_vSetPinLockSTS+0x154>)
 8000b9c:	69db      	ldr	r3, [r3, #28]
 8000b9e:	7979      	ldrb	r1, [r7, #5]
 8000ba0:	79ba      	ldrb	r2, [r7, #6]
 8000ba2:	fa01 f202 	lsl.w	r2, r1, r2
 8000ba6:	4611      	mov	r1, r2
 8000ba8:	4a27      	ldr	r2, [pc, #156]	; (8000c48 <MGPIO_vSetPinLockSTS+0x154>)
 8000baa:	430b      	orrs	r3, r1
 8000bac:	61d3      	str	r3, [r2, #28]
		break;
 8000bae:	e041      	b.n	8000c34 <MGPIO_vSetPinLockSTS+0x140>
	case PORTD:
		GPIOD->GPIO_LCKR &= ~(0b1<<copy_eGPIO_Pin);
 8000bb0:	4b26      	ldr	r3, [pc, #152]	; (8000c4c <MGPIO_vSetPinLockSTS+0x158>)
 8000bb2:	69db      	ldr	r3, [r3, #28]
 8000bb4:	79ba      	ldrb	r2, [r7, #6]
 8000bb6:	2101      	movs	r1, #1
 8000bb8:	fa01 f202 	lsl.w	r2, r1, r2
 8000bbc:	43d2      	mvns	r2, r2
 8000bbe:	4611      	mov	r1, r2
 8000bc0:	4a22      	ldr	r2, [pc, #136]	; (8000c4c <MGPIO_vSetPinLockSTS+0x158>)
 8000bc2:	400b      	ands	r3, r1
 8000bc4:	61d3      	str	r3, [r2, #28]
		GPIOD->GPIO_LCKR |= (copy_GPIO_LCK<<copy_eGPIO_Pin);
 8000bc6:	4b21      	ldr	r3, [pc, #132]	; (8000c4c <MGPIO_vSetPinLockSTS+0x158>)
 8000bc8:	69db      	ldr	r3, [r3, #28]
 8000bca:	7979      	ldrb	r1, [r7, #5]
 8000bcc:	79ba      	ldrb	r2, [r7, #6]
 8000bce:	fa01 f202 	lsl.w	r2, r1, r2
 8000bd2:	4611      	mov	r1, r2
 8000bd4:	4a1d      	ldr	r2, [pc, #116]	; (8000c4c <MGPIO_vSetPinLockSTS+0x158>)
 8000bd6:	430b      	orrs	r3, r1
 8000bd8:	61d3      	str	r3, [r2, #28]
		break;
 8000bda:	e02b      	b.n	8000c34 <MGPIO_vSetPinLockSTS+0x140>
	case PORTE:
		GPIOE->GPIO_LCKR &= ~(0b1<<copy_eGPIO_Pin);
 8000bdc:	4b1c      	ldr	r3, [pc, #112]	; (8000c50 <MGPIO_vSetPinLockSTS+0x15c>)
 8000bde:	69db      	ldr	r3, [r3, #28]
 8000be0:	79ba      	ldrb	r2, [r7, #6]
 8000be2:	2101      	movs	r1, #1
 8000be4:	fa01 f202 	lsl.w	r2, r1, r2
 8000be8:	43d2      	mvns	r2, r2
 8000bea:	4611      	mov	r1, r2
 8000bec:	4a18      	ldr	r2, [pc, #96]	; (8000c50 <MGPIO_vSetPinLockSTS+0x15c>)
 8000bee:	400b      	ands	r3, r1
 8000bf0:	61d3      	str	r3, [r2, #28]
		GPIOE->GPIO_LCKR |= (copy_GPIO_LCK<<copy_eGPIO_Pin);
 8000bf2:	4b17      	ldr	r3, [pc, #92]	; (8000c50 <MGPIO_vSetPinLockSTS+0x15c>)
 8000bf4:	69db      	ldr	r3, [r3, #28]
 8000bf6:	7979      	ldrb	r1, [r7, #5]
 8000bf8:	79ba      	ldrb	r2, [r7, #6]
 8000bfa:	fa01 f202 	lsl.w	r2, r1, r2
 8000bfe:	4611      	mov	r1, r2
 8000c00:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <MGPIO_vSetPinLockSTS+0x15c>)
 8000c02:	430b      	orrs	r3, r1
 8000c04:	61d3      	str	r3, [r2, #28]
		break;
 8000c06:	e015      	b.n	8000c34 <MGPIO_vSetPinLockSTS+0x140>
	case PORTH:
		GPIOH->GPIO_LCKR &= ~(0b1<<copy_eGPIO_Pin);
 8000c08:	4b12      	ldr	r3, [pc, #72]	; (8000c54 <MGPIO_vSetPinLockSTS+0x160>)
 8000c0a:	69db      	ldr	r3, [r3, #28]
 8000c0c:	79ba      	ldrb	r2, [r7, #6]
 8000c0e:	2101      	movs	r1, #1
 8000c10:	fa01 f202 	lsl.w	r2, r1, r2
 8000c14:	43d2      	mvns	r2, r2
 8000c16:	4611      	mov	r1, r2
 8000c18:	4a0e      	ldr	r2, [pc, #56]	; (8000c54 <MGPIO_vSetPinLockSTS+0x160>)
 8000c1a:	400b      	ands	r3, r1
 8000c1c:	61d3      	str	r3, [r2, #28]
		GPIOH->GPIO_LCKR |= (copy_GPIO_LCK<<copy_eGPIO_Pin);
 8000c1e:	4b0d      	ldr	r3, [pc, #52]	; (8000c54 <MGPIO_vSetPinLockSTS+0x160>)
 8000c20:	69db      	ldr	r3, [r3, #28]
 8000c22:	7979      	ldrb	r1, [r7, #5]
 8000c24:	79ba      	ldrb	r2, [r7, #6]
 8000c26:	fa01 f202 	lsl.w	r2, r1, r2
 8000c2a:	4611      	mov	r1, r2
 8000c2c:	4a09      	ldr	r2, [pc, #36]	; (8000c54 <MGPIO_vSetPinLockSTS+0x160>)
 8000c2e:	430b      	orrs	r3, r1
 8000c30:	61d3      	str	r3, [r2, #28]
		break;
 8000c32:	bf00      	nop
	}

}
 8000c34:	bf00      	nop
 8000c36:	370c      	adds	r7, #12
 8000c38:	46bd      	mov	sp, r7
 8000c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c3e:	4770      	bx	lr
 8000c40:	40020000 	.word	0x40020000
 8000c44:	40020400 	.word	0x40020400
 8000c48:	40020800 	.word	0x40020800
 8000c4c:	40020c00 	.word	0x40020c00
 8000c50:	40021000 	.word	0x40021000
 8000c54:	40021c00 	.word	0x40021c00

08000c58 <MGPIO_vSetPinAlternativeFunction>:
void MGPIO_vSetPinAlternativeFunction(GPIO_Port_t copy_eGPIO_Port,GPIO_Pin_t copy_eGPIO_Pin,GPIO_AF_t copy_GPIO_AF)
{
 8000c58:	b480      	push	{r7}
 8000c5a:	b083      	sub	sp, #12
 8000c5c:	af00      	add	r7, sp, #0
 8000c5e:	4603      	mov	r3, r0
 8000c60:	71fb      	strb	r3, [r7, #7]
 8000c62:	460b      	mov	r3, r1
 8000c64:	71bb      	strb	r3, [r7, #6]
 8000c66:	4613      	mov	r3, r2
 8000c68:	717b      	strb	r3, [r7, #5]
	switch (copy_eGPIO_Port)
 8000c6a:	79fb      	ldrb	r3, [r7, #7]
 8000c6c:	2b05      	cmp	r3, #5
 8000c6e:	f200 8129 	bhi.w	8000ec4 <MGPIO_vSetPinAlternativeFunction+0x26c>
 8000c72:	a201      	add	r2, pc, #4	; (adr r2, 8000c78 <MGPIO_vSetPinAlternativeFunction+0x20>)
 8000c74:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000c78:	08000c91 	.word	0x08000c91
 8000c7c:	08000cef 	.word	0x08000cef
 8000c80:	08000d4d 	.word	0x08000d4d
 8000c84:	08000dab 	.word	0x08000dab
 8000c88:	08000e09 	.word	0x08000e09
 8000c8c:	08000e67 	.word	0x08000e67
	{
	case PORTA:
		if (copy_eGPIO_Pin<8)
 8000c90:	79bb      	ldrb	r3, [r7, #6]
 8000c92:	2b07      	cmp	r3, #7
 8000c94:	d815      	bhi.n	8000cc2 <MGPIO_vSetPinAlternativeFunction+0x6a>
		{
			GPIOA->GPIO_AFRL &= ~(0b1111<<copy_eGPIO_Pin);
 8000c96:	4b8e      	ldr	r3, [pc, #568]	; (8000ed0 <MGPIO_vSetPinAlternativeFunction+0x278>)
 8000c98:	6a1b      	ldr	r3, [r3, #32]
 8000c9a:	79ba      	ldrb	r2, [r7, #6]
 8000c9c:	210f      	movs	r1, #15
 8000c9e:	fa01 f202 	lsl.w	r2, r1, r2
 8000ca2:	43d2      	mvns	r2, r2
 8000ca4:	4611      	mov	r1, r2
 8000ca6:	4a8a      	ldr	r2, [pc, #552]	; (8000ed0 <MGPIO_vSetPinAlternativeFunction+0x278>)
 8000ca8:	400b      	ands	r3, r1
 8000caa:	6213      	str	r3, [r2, #32]
			GPIOA->GPIO_AFRL |= (copy_GPIO_AF<<copy_eGPIO_Pin);
 8000cac:	4b88      	ldr	r3, [pc, #544]	; (8000ed0 <MGPIO_vSetPinAlternativeFunction+0x278>)
 8000cae:	6a1b      	ldr	r3, [r3, #32]
 8000cb0:	7979      	ldrb	r1, [r7, #5]
 8000cb2:	79ba      	ldrb	r2, [r7, #6]
 8000cb4:	fa01 f202 	lsl.w	r2, r1, r2
 8000cb8:	4611      	mov	r1, r2
 8000cba:	4a85      	ldr	r2, [pc, #532]	; (8000ed0 <MGPIO_vSetPinAlternativeFunction+0x278>)
 8000cbc:	430b      	orrs	r3, r1
 8000cbe:	6213      	str	r3, [r2, #32]
		else
		{
			GPIOA->GPIO_AFRH &= ~(0b1111<<copy_eGPIO_Pin);
			GPIOA->GPIO_AFRH |= (copy_GPIO_AF<<copy_eGPIO_Pin);
		}
		break;
 8000cc0:	e100      	b.n	8000ec4 <MGPIO_vSetPinAlternativeFunction+0x26c>
			GPIOA->GPIO_AFRH &= ~(0b1111<<copy_eGPIO_Pin);
 8000cc2:	4b83      	ldr	r3, [pc, #524]	; (8000ed0 <MGPIO_vSetPinAlternativeFunction+0x278>)
 8000cc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000cc6:	79ba      	ldrb	r2, [r7, #6]
 8000cc8:	210f      	movs	r1, #15
 8000cca:	fa01 f202 	lsl.w	r2, r1, r2
 8000cce:	43d2      	mvns	r2, r2
 8000cd0:	4611      	mov	r1, r2
 8000cd2:	4a7f      	ldr	r2, [pc, #508]	; (8000ed0 <MGPIO_vSetPinAlternativeFunction+0x278>)
 8000cd4:	400b      	ands	r3, r1
 8000cd6:	6253      	str	r3, [r2, #36]	; 0x24
			GPIOA->GPIO_AFRH |= (copy_GPIO_AF<<copy_eGPIO_Pin);
 8000cd8:	4b7d      	ldr	r3, [pc, #500]	; (8000ed0 <MGPIO_vSetPinAlternativeFunction+0x278>)
 8000cda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000cdc:	7979      	ldrb	r1, [r7, #5]
 8000cde:	79ba      	ldrb	r2, [r7, #6]
 8000ce0:	fa01 f202 	lsl.w	r2, r1, r2
 8000ce4:	4611      	mov	r1, r2
 8000ce6:	4a7a      	ldr	r2, [pc, #488]	; (8000ed0 <MGPIO_vSetPinAlternativeFunction+0x278>)
 8000ce8:	430b      	orrs	r3, r1
 8000cea:	6253      	str	r3, [r2, #36]	; 0x24
		break;
 8000cec:	e0ea      	b.n	8000ec4 <MGPIO_vSetPinAlternativeFunction+0x26c>
	case PORTB:
		if (copy_eGPIO_Pin<8)
 8000cee:	79bb      	ldrb	r3, [r7, #6]
 8000cf0:	2b07      	cmp	r3, #7
 8000cf2:	d815      	bhi.n	8000d20 <MGPIO_vSetPinAlternativeFunction+0xc8>
		{
			GPIOB->GPIO_AFRL &= ~(0b1111<<copy_eGPIO_Pin);
 8000cf4:	4b77      	ldr	r3, [pc, #476]	; (8000ed4 <MGPIO_vSetPinAlternativeFunction+0x27c>)
 8000cf6:	6a1b      	ldr	r3, [r3, #32]
 8000cf8:	79ba      	ldrb	r2, [r7, #6]
 8000cfa:	210f      	movs	r1, #15
 8000cfc:	fa01 f202 	lsl.w	r2, r1, r2
 8000d00:	43d2      	mvns	r2, r2
 8000d02:	4611      	mov	r1, r2
 8000d04:	4a73      	ldr	r2, [pc, #460]	; (8000ed4 <MGPIO_vSetPinAlternativeFunction+0x27c>)
 8000d06:	400b      	ands	r3, r1
 8000d08:	6213      	str	r3, [r2, #32]
			GPIOB->GPIO_AFRL |= (copy_GPIO_AF<<copy_eGPIO_Pin);
 8000d0a:	4b72      	ldr	r3, [pc, #456]	; (8000ed4 <MGPIO_vSetPinAlternativeFunction+0x27c>)
 8000d0c:	6a1b      	ldr	r3, [r3, #32]
 8000d0e:	7979      	ldrb	r1, [r7, #5]
 8000d10:	79ba      	ldrb	r2, [r7, #6]
 8000d12:	fa01 f202 	lsl.w	r2, r1, r2
 8000d16:	4611      	mov	r1, r2
 8000d18:	4a6e      	ldr	r2, [pc, #440]	; (8000ed4 <MGPIO_vSetPinAlternativeFunction+0x27c>)
 8000d1a:	430b      	orrs	r3, r1
 8000d1c:	6213      	str	r3, [r2, #32]
		else
		{
			GPIOB->GPIO_AFRH &= ~(0b1111<<copy_eGPIO_Pin);
			GPIOB->GPIO_AFRH |= (copy_GPIO_AF<<copy_eGPIO_Pin);
		}
		break;
 8000d1e:	e0d1      	b.n	8000ec4 <MGPIO_vSetPinAlternativeFunction+0x26c>
			GPIOB->GPIO_AFRH &= ~(0b1111<<copy_eGPIO_Pin);
 8000d20:	4b6c      	ldr	r3, [pc, #432]	; (8000ed4 <MGPIO_vSetPinAlternativeFunction+0x27c>)
 8000d22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000d24:	79ba      	ldrb	r2, [r7, #6]
 8000d26:	210f      	movs	r1, #15
 8000d28:	fa01 f202 	lsl.w	r2, r1, r2
 8000d2c:	43d2      	mvns	r2, r2
 8000d2e:	4611      	mov	r1, r2
 8000d30:	4a68      	ldr	r2, [pc, #416]	; (8000ed4 <MGPIO_vSetPinAlternativeFunction+0x27c>)
 8000d32:	400b      	ands	r3, r1
 8000d34:	6253      	str	r3, [r2, #36]	; 0x24
			GPIOB->GPIO_AFRH |= (copy_GPIO_AF<<copy_eGPIO_Pin);
 8000d36:	4b67      	ldr	r3, [pc, #412]	; (8000ed4 <MGPIO_vSetPinAlternativeFunction+0x27c>)
 8000d38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000d3a:	7979      	ldrb	r1, [r7, #5]
 8000d3c:	79ba      	ldrb	r2, [r7, #6]
 8000d3e:	fa01 f202 	lsl.w	r2, r1, r2
 8000d42:	4611      	mov	r1, r2
 8000d44:	4a63      	ldr	r2, [pc, #396]	; (8000ed4 <MGPIO_vSetPinAlternativeFunction+0x27c>)
 8000d46:	430b      	orrs	r3, r1
 8000d48:	6253      	str	r3, [r2, #36]	; 0x24
		break;
 8000d4a:	e0bb      	b.n	8000ec4 <MGPIO_vSetPinAlternativeFunction+0x26c>
	case PORTC:
		if (copy_eGPIO_Pin<8)
 8000d4c:	79bb      	ldrb	r3, [r7, #6]
 8000d4e:	2b07      	cmp	r3, #7
 8000d50:	d815      	bhi.n	8000d7e <MGPIO_vSetPinAlternativeFunction+0x126>
		{
			GPIOC->GPIO_AFRL &= ~(0b1111<<copy_eGPIO_Pin);
 8000d52:	4b61      	ldr	r3, [pc, #388]	; (8000ed8 <MGPIO_vSetPinAlternativeFunction+0x280>)
 8000d54:	6a1b      	ldr	r3, [r3, #32]
 8000d56:	79ba      	ldrb	r2, [r7, #6]
 8000d58:	210f      	movs	r1, #15
 8000d5a:	fa01 f202 	lsl.w	r2, r1, r2
 8000d5e:	43d2      	mvns	r2, r2
 8000d60:	4611      	mov	r1, r2
 8000d62:	4a5d      	ldr	r2, [pc, #372]	; (8000ed8 <MGPIO_vSetPinAlternativeFunction+0x280>)
 8000d64:	400b      	ands	r3, r1
 8000d66:	6213      	str	r3, [r2, #32]
			GPIOC->GPIO_AFRL |= (copy_GPIO_AF<<copy_eGPIO_Pin);
 8000d68:	4b5b      	ldr	r3, [pc, #364]	; (8000ed8 <MGPIO_vSetPinAlternativeFunction+0x280>)
 8000d6a:	6a1b      	ldr	r3, [r3, #32]
 8000d6c:	7979      	ldrb	r1, [r7, #5]
 8000d6e:	79ba      	ldrb	r2, [r7, #6]
 8000d70:	fa01 f202 	lsl.w	r2, r1, r2
 8000d74:	4611      	mov	r1, r2
 8000d76:	4a58      	ldr	r2, [pc, #352]	; (8000ed8 <MGPIO_vSetPinAlternativeFunction+0x280>)
 8000d78:	430b      	orrs	r3, r1
 8000d7a:	6213      	str	r3, [r2, #32]
		else
		{
			GPIOC->GPIO_AFRH &= ~(0b1111<<copy_eGPIO_Pin);
			GPIOC->GPIO_AFRH |= (copy_GPIO_AF<<copy_eGPIO_Pin);
		}
		break;
 8000d7c:	e0a2      	b.n	8000ec4 <MGPIO_vSetPinAlternativeFunction+0x26c>
			GPIOC->GPIO_AFRH &= ~(0b1111<<copy_eGPIO_Pin);
 8000d7e:	4b56      	ldr	r3, [pc, #344]	; (8000ed8 <MGPIO_vSetPinAlternativeFunction+0x280>)
 8000d80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000d82:	79ba      	ldrb	r2, [r7, #6]
 8000d84:	210f      	movs	r1, #15
 8000d86:	fa01 f202 	lsl.w	r2, r1, r2
 8000d8a:	43d2      	mvns	r2, r2
 8000d8c:	4611      	mov	r1, r2
 8000d8e:	4a52      	ldr	r2, [pc, #328]	; (8000ed8 <MGPIO_vSetPinAlternativeFunction+0x280>)
 8000d90:	400b      	ands	r3, r1
 8000d92:	6253      	str	r3, [r2, #36]	; 0x24
			GPIOC->GPIO_AFRH |= (copy_GPIO_AF<<copy_eGPIO_Pin);
 8000d94:	4b50      	ldr	r3, [pc, #320]	; (8000ed8 <MGPIO_vSetPinAlternativeFunction+0x280>)
 8000d96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000d98:	7979      	ldrb	r1, [r7, #5]
 8000d9a:	79ba      	ldrb	r2, [r7, #6]
 8000d9c:	fa01 f202 	lsl.w	r2, r1, r2
 8000da0:	4611      	mov	r1, r2
 8000da2:	4a4d      	ldr	r2, [pc, #308]	; (8000ed8 <MGPIO_vSetPinAlternativeFunction+0x280>)
 8000da4:	430b      	orrs	r3, r1
 8000da6:	6253      	str	r3, [r2, #36]	; 0x24
		break;
 8000da8:	e08c      	b.n	8000ec4 <MGPIO_vSetPinAlternativeFunction+0x26c>
	case PORTD:
		if (copy_eGPIO_Pin<8)
 8000daa:	79bb      	ldrb	r3, [r7, #6]
 8000dac:	2b07      	cmp	r3, #7
 8000dae:	d815      	bhi.n	8000ddc <MGPIO_vSetPinAlternativeFunction+0x184>
		{
			GPIOD->GPIO_AFRL &= ~(0b1111<<copy_eGPIO_Pin);
 8000db0:	4b4a      	ldr	r3, [pc, #296]	; (8000edc <MGPIO_vSetPinAlternativeFunction+0x284>)
 8000db2:	6a1b      	ldr	r3, [r3, #32]
 8000db4:	79ba      	ldrb	r2, [r7, #6]
 8000db6:	210f      	movs	r1, #15
 8000db8:	fa01 f202 	lsl.w	r2, r1, r2
 8000dbc:	43d2      	mvns	r2, r2
 8000dbe:	4611      	mov	r1, r2
 8000dc0:	4a46      	ldr	r2, [pc, #280]	; (8000edc <MGPIO_vSetPinAlternativeFunction+0x284>)
 8000dc2:	400b      	ands	r3, r1
 8000dc4:	6213      	str	r3, [r2, #32]
			GPIOD->GPIO_AFRL |= (copy_GPIO_AF<<copy_eGPIO_Pin);
 8000dc6:	4b45      	ldr	r3, [pc, #276]	; (8000edc <MGPIO_vSetPinAlternativeFunction+0x284>)
 8000dc8:	6a1b      	ldr	r3, [r3, #32]
 8000dca:	7979      	ldrb	r1, [r7, #5]
 8000dcc:	79ba      	ldrb	r2, [r7, #6]
 8000dce:	fa01 f202 	lsl.w	r2, r1, r2
 8000dd2:	4611      	mov	r1, r2
 8000dd4:	4a41      	ldr	r2, [pc, #260]	; (8000edc <MGPIO_vSetPinAlternativeFunction+0x284>)
 8000dd6:	430b      	orrs	r3, r1
 8000dd8:	6213      	str	r3, [r2, #32]
		else
		{
			GPIOD->GPIO_AFRH &= ~(0b1111<<copy_eGPIO_Pin);
			GPIOD->GPIO_AFRH |= (copy_GPIO_AF<<copy_eGPIO_Pin);
		}
		break;
 8000dda:	e073      	b.n	8000ec4 <MGPIO_vSetPinAlternativeFunction+0x26c>
			GPIOD->GPIO_AFRH &= ~(0b1111<<copy_eGPIO_Pin);
 8000ddc:	4b3f      	ldr	r3, [pc, #252]	; (8000edc <MGPIO_vSetPinAlternativeFunction+0x284>)
 8000dde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000de0:	79ba      	ldrb	r2, [r7, #6]
 8000de2:	210f      	movs	r1, #15
 8000de4:	fa01 f202 	lsl.w	r2, r1, r2
 8000de8:	43d2      	mvns	r2, r2
 8000dea:	4611      	mov	r1, r2
 8000dec:	4a3b      	ldr	r2, [pc, #236]	; (8000edc <MGPIO_vSetPinAlternativeFunction+0x284>)
 8000dee:	400b      	ands	r3, r1
 8000df0:	6253      	str	r3, [r2, #36]	; 0x24
			GPIOD->GPIO_AFRH |= (copy_GPIO_AF<<copy_eGPIO_Pin);
 8000df2:	4b3a      	ldr	r3, [pc, #232]	; (8000edc <MGPIO_vSetPinAlternativeFunction+0x284>)
 8000df4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000df6:	7979      	ldrb	r1, [r7, #5]
 8000df8:	79ba      	ldrb	r2, [r7, #6]
 8000dfa:	fa01 f202 	lsl.w	r2, r1, r2
 8000dfe:	4611      	mov	r1, r2
 8000e00:	4a36      	ldr	r2, [pc, #216]	; (8000edc <MGPIO_vSetPinAlternativeFunction+0x284>)
 8000e02:	430b      	orrs	r3, r1
 8000e04:	6253      	str	r3, [r2, #36]	; 0x24
		break;
 8000e06:	e05d      	b.n	8000ec4 <MGPIO_vSetPinAlternativeFunction+0x26c>
	case PORTE:
		if (copy_eGPIO_Pin<8)
 8000e08:	79bb      	ldrb	r3, [r7, #6]
 8000e0a:	2b07      	cmp	r3, #7
 8000e0c:	d815      	bhi.n	8000e3a <MGPIO_vSetPinAlternativeFunction+0x1e2>
		{
			GPIOE->GPIO_AFRL &= ~(0b1111<<copy_eGPIO_Pin);
 8000e0e:	4b34      	ldr	r3, [pc, #208]	; (8000ee0 <MGPIO_vSetPinAlternativeFunction+0x288>)
 8000e10:	6a1b      	ldr	r3, [r3, #32]
 8000e12:	79ba      	ldrb	r2, [r7, #6]
 8000e14:	210f      	movs	r1, #15
 8000e16:	fa01 f202 	lsl.w	r2, r1, r2
 8000e1a:	43d2      	mvns	r2, r2
 8000e1c:	4611      	mov	r1, r2
 8000e1e:	4a30      	ldr	r2, [pc, #192]	; (8000ee0 <MGPIO_vSetPinAlternativeFunction+0x288>)
 8000e20:	400b      	ands	r3, r1
 8000e22:	6213      	str	r3, [r2, #32]
			GPIOE->GPIO_AFRL |= (copy_GPIO_AF<<copy_eGPIO_Pin);
 8000e24:	4b2e      	ldr	r3, [pc, #184]	; (8000ee0 <MGPIO_vSetPinAlternativeFunction+0x288>)
 8000e26:	6a1b      	ldr	r3, [r3, #32]
 8000e28:	7979      	ldrb	r1, [r7, #5]
 8000e2a:	79ba      	ldrb	r2, [r7, #6]
 8000e2c:	fa01 f202 	lsl.w	r2, r1, r2
 8000e30:	4611      	mov	r1, r2
 8000e32:	4a2b      	ldr	r2, [pc, #172]	; (8000ee0 <MGPIO_vSetPinAlternativeFunction+0x288>)
 8000e34:	430b      	orrs	r3, r1
 8000e36:	6213      	str	r3, [r2, #32]
		else
		{
			GPIOE->GPIO_AFRH &= ~(0b1111<<copy_eGPIO_Pin);
			GPIOE->GPIO_AFRH |= (copy_GPIO_AF<<copy_eGPIO_Pin);
		}
		break;
 8000e38:	e044      	b.n	8000ec4 <MGPIO_vSetPinAlternativeFunction+0x26c>
			GPIOE->GPIO_AFRH &= ~(0b1111<<copy_eGPIO_Pin);
 8000e3a:	4b29      	ldr	r3, [pc, #164]	; (8000ee0 <MGPIO_vSetPinAlternativeFunction+0x288>)
 8000e3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000e3e:	79ba      	ldrb	r2, [r7, #6]
 8000e40:	210f      	movs	r1, #15
 8000e42:	fa01 f202 	lsl.w	r2, r1, r2
 8000e46:	43d2      	mvns	r2, r2
 8000e48:	4611      	mov	r1, r2
 8000e4a:	4a25      	ldr	r2, [pc, #148]	; (8000ee0 <MGPIO_vSetPinAlternativeFunction+0x288>)
 8000e4c:	400b      	ands	r3, r1
 8000e4e:	6253      	str	r3, [r2, #36]	; 0x24
			GPIOE->GPIO_AFRH |= (copy_GPIO_AF<<copy_eGPIO_Pin);
 8000e50:	4b23      	ldr	r3, [pc, #140]	; (8000ee0 <MGPIO_vSetPinAlternativeFunction+0x288>)
 8000e52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000e54:	7979      	ldrb	r1, [r7, #5]
 8000e56:	79ba      	ldrb	r2, [r7, #6]
 8000e58:	fa01 f202 	lsl.w	r2, r1, r2
 8000e5c:	4611      	mov	r1, r2
 8000e5e:	4a20      	ldr	r2, [pc, #128]	; (8000ee0 <MGPIO_vSetPinAlternativeFunction+0x288>)
 8000e60:	430b      	orrs	r3, r1
 8000e62:	6253      	str	r3, [r2, #36]	; 0x24
		break;
 8000e64:	e02e      	b.n	8000ec4 <MGPIO_vSetPinAlternativeFunction+0x26c>
	case PORTH:
		if (copy_eGPIO_Pin<8)
 8000e66:	79bb      	ldrb	r3, [r7, #6]
 8000e68:	2b07      	cmp	r3, #7
 8000e6a:	d815      	bhi.n	8000e98 <MGPIO_vSetPinAlternativeFunction+0x240>
		{
			GPIOH->GPIO_AFRL &= ~(0b1111<<copy_eGPIO_Pin);
 8000e6c:	4b1d      	ldr	r3, [pc, #116]	; (8000ee4 <MGPIO_vSetPinAlternativeFunction+0x28c>)
 8000e6e:	6a1b      	ldr	r3, [r3, #32]
 8000e70:	79ba      	ldrb	r2, [r7, #6]
 8000e72:	210f      	movs	r1, #15
 8000e74:	fa01 f202 	lsl.w	r2, r1, r2
 8000e78:	43d2      	mvns	r2, r2
 8000e7a:	4611      	mov	r1, r2
 8000e7c:	4a19      	ldr	r2, [pc, #100]	; (8000ee4 <MGPIO_vSetPinAlternativeFunction+0x28c>)
 8000e7e:	400b      	ands	r3, r1
 8000e80:	6213      	str	r3, [r2, #32]
			GPIOH->GPIO_AFRL |= (copy_GPIO_AF<<copy_eGPIO_Pin);
 8000e82:	4b18      	ldr	r3, [pc, #96]	; (8000ee4 <MGPIO_vSetPinAlternativeFunction+0x28c>)
 8000e84:	6a1b      	ldr	r3, [r3, #32]
 8000e86:	7979      	ldrb	r1, [r7, #5]
 8000e88:	79ba      	ldrb	r2, [r7, #6]
 8000e8a:	fa01 f202 	lsl.w	r2, r1, r2
 8000e8e:	4611      	mov	r1, r2
 8000e90:	4a14      	ldr	r2, [pc, #80]	; (8000ee4 <MGPIO_vSetPinAlternativeFunction+0x28c>)
 8000e92:	430b      	orrs	r3, r1
 8000e94:	6213      	str	r3, [r2, #32]
		else
		{
			GPIOH->GPIO_AFRH &= ~(0b1111<<copy_eGPIO_Pin);
			GPIOH->GPIO_AFRH |= (copy_GPIO_AF<<copy_eGPIO_Pin);
		}
		break;
 8000e96:	e014      	b.n	8000ec2 <MGPIO_vSetPinAlternativeFunction+0x26a>
			GPIOH->GPIO_AFRH &= ~(0b1111<<copy_eGPIO_Pin);
 8000e98:	4b12      	ldr	r3, [pc, #72]	; (8000ee4 <MGPIO_vSetPinAlternativeFunction+0x28c>)
 8000e9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000e9c:	79ba      	ldrb	r2, [r7, #6]
 8000e9e:	210f      	movs	r1, #15
 8000ea0:	fa01 f202 	lsl.w	r2, r1, r2
 8000ea4:	43d2      	mvns	r2, r2
 8000ea6:	4611      	mov	r1, r2
 8000ea8:	4a0e      	ldr	r2, [pc, #56]	; (8000ee4 <MGPIO_vSetPinAlternativeFunction+0x28c>)
 8000eaa:	400b      	ands	r3, r1
 8000eac:	6253      	str	r3, [r2, #36]	; 0x24
			GPIOH->GPIO_AFRH |= (copy_GPIO_AF<<copy_eGPIO_Pin);
 8000eae:	4b0d      	ldr	r3, [pc, #52]	; (8000ee4 <MGPIO_vSetPinAlternativeFunction+0x28c>)
 8000eb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000eb2:	7979      	ldrb	r1, [r7, #5]
 8000eb4:	79ba      	ldrb	r2, [r7, #6]
 8000eb6:	fa01 f202 	lsl.w	r2, r1, r2
 8000eba:	4611      	mov	r1, r2
 8000ebc:	4a09      	ldr	r2, [pc, #36]	; (8000ee4 <MGPIO_vSetPinAlternativeFunction+0x28c>)
 8000ebe:	430b      	orrs	r3, r1
 8000ec0:	6253      	str	r3, [r2, #36]	; 0x24
		break;
 8000ec2:	bf00      	nop
	}

}
 8000ec4:	bf00      	nop
 8000ec6:	370c      	adds	r7, #12
 8000ec8:	46bd      	mov	sp, r7
 8000eca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ece:	4770      	bx	lr
 8000ed0:	40020000 	.word	0x40020000
 8000ed4:	40020400 	.word	0x40020400
 8000ed8:	40020800 	.word	0x40020800
 8000edc:	40020c00 	.word	0x40020c00
 8000ee0:	40021000 	.word	0x40021000
 8000ee4:	40021c00 	.word	0x40021c00

08000ee8 <RCC_AHB1EnableCLK>:
	RCC->RCC_CR&= ~(1<<CSSON);
	RCC->RCC_CR|=(copy_eClock_detector<<CSSON);
}

void RCC_AHB1EnableCLK(PeripheralAHB1_t peripheral)
{
 8000ee8:	b480      	push	{r7}
 8000eea:	b083      	sub	sp, #12
 8000eec:	af00      	add	r7, sp, #0
 8000eee:	4603      	mov	r3, r0
 8000ef0:	71fb      	strb	r3, [r7, #7]
	SET_BIT(RCC->RCC_AHB1ENR,peripheral);
 8000ef2:	4b08      	ldr	r3, [pc, #32]	; (8000f14 <RCC_AHB1EnableCLK+0x2c>)
 8000ef4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ef6:	79fa      	ldrb	r2, [r7, #7]
 8000ef8:	2101      	movs	r1, #1
 8000efa:	fa01 f202 	lsl.w	r2, r1, r2
 8000efe:	4611      	mov	r1, r2
 8000f00:	4a04      	ldr	r2, [pc, #16]	; (8000f14 <RCC_AHB1EnableCLK+0x2c>)
 8000f02:	430b      	orrs	r3, r1
 8000f04:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000f06:	bf00      	nop
 8000f08:	370c      	adds	r7, #12
 8000f0a:	46bd      	mov	sp, r7
 8000f0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f10:	4770      	bx	lr
 8000f12:	bf00      	nop
 8000f14:	40023800 	.word	0x40023800

08000f18 <MSTK_vInit>:
		Global_SysTickCallback();
	}
}

void MSTK_vInit()
{
 8000f18:	b480      	push	{r7}
 8000f1a:	af00      	add	r7, sp, #0
	/*1. CLK SRC*/
	CLEAR_BIT(MSTK->STK_CTRL,CLKSOURCE); // AHB/8 = 2 MHz
 8000f1c:	4b08      	ldr	r3, [pc, #32]	; (8000f40 <MSTK_vInit+0x28>)
 8000f1e:	681b      	ldr	r3, [r3, #0]
 8000f20:	4a07      	ldr	r2, [pc, #28]	; (8000f40 <MSTK_vInit+0x28>)
 8000f22:	f023 0304 	bic.w	r3, r3, #4
 8000f26:	6013      	str	r3, [r2, #0]

	/*2. interrupt enable  */
	CLEAR_BIT(MSTK->STK_CTRL,TICKINT); // AHB/8
 8000f28:	4b05      	ldr	r3, [pc, #20]	; (8000f40 <MSTK_vInit+0x28>)
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	4a04      	ldr	r2, [pc, #16]	; (8000f40 <MSTK_vInit+0x28>)
 8000f2e:	f023 0302 	bic.w	r3, r3, #2
 8000f32:	6013      	str	r3, [r2, #0]


}
 8000f34:	bf00      	nop
 8000f36:	46bd      	mov	sp, r7
 8000f38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f3c:	4770      	bx	lr
 8000f3e:	bf00      	nop
 8000f40:	e000e010 	.word	0xe000e010

08000f44 <MSTK_vSetBusyWait>:
	CLEAR_BIT(MSTK->STK_CTRL,ENABLE);
}


void MSTK_vSetBusyWait(uint32_t copy_u32Ticks)
{
 8000f44:	b480      	push	{r7}
 8000f46:	b083      	sub	sp, #12
 8000f48:	af00      	add	r7, sp, #0
 8000f4a:	6078      	str	r0, [r7, #4]
	// reset timer value to clear count flag
	MSTK->STK_VAL = 0 ;
 8000f4c:	4b0f      	ldr	r3, [pc, #60]	; (8000f8c <MSTK_vSetBusyWait+0x48>)
 8000f4e:	2200      	movs	r2, #0
 8000f50:	609a      	str	r2, [r3, #8]
	// load timer
	MSTK->STK_LOAD=copy_u32Ticks;
 8000f52:	4a0e      	ldr	r2, [pc, #56]	; (8000f8c <MSTK_vSetBusyWait+0x48>)
 8000f54:	687b      	ldr	r3, [r7, #4]
 8000f56:	6053      	str	r3, [r2, #4]
	//Enable timer
	SET_BIT(MSTK->STK_CTRL,ENABLE);
 8000f58:	4b0c      	ldr	r3, [pc, #48]	; (8000f8c <MSTK_vSetBusyWait+0x48>)
 8000f5a:	681b      	ldr	r3, [r3, #0]
 8000f5c:	4a0b      	ldr	r2, [pc, #44]	; (8000f8c <MSTK_vSetBusyWait+0x48>)
 8000f5e:	f043 0301 	orr.w	r3, r3, #1
 8000f62:	6013      	str	r3, [r2, #0]
	//Busy wait
	while(READ_BIT(MSTK->STK_CTRL,COUNTFLAG) != 1);
 8000f64:	bf00      	nop
 8000f66:	4b09      	ldr	r3, [pc, #36]	; (8000f8c <MSTK_vSetBusyWait+0x48>)
 8000f68:	681b      	ldr	r3, [r3, #0]
 8000f6a:	0c1b      	lsrs	r3, r3, #16
 8000f6c:	f003 0301 	and.w	r3, r3, #1
 8000f70:	2b01      	cmp	r3, #1
 8000f72:	d1f8      	bne.n	8000f66 <MSTK_vSetBusyWait+0x22>
	// stop timer
	CLEAR_BIT(MSTK->STK_CTRL,ENABLE);
 8000f74:	4b05      	ldr	r3, [pc, #20]	; (8000f8c <MSTK_vSetBusyWait+0x48>)
 8000f76:	681b      	ldr	r3, [r3, #0]
 8000f78:	4a04      	ldr	r2, [pc, #16]	; (8000f8c <MSTK_vSetBusyWait+0x48>)
 8000f7a:	f023 0301 	bic.w	r3, r3, #1
 8000f7e:	6013      	str	r3, [r2, #0]

}
 8000f80:	bf00      	nop
 8000f82:	370c      	adds	r7, #12
 8000f84:	46bd      	mov	sp, r7
 8000f86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f8a:	4770      	bx	lr
 8000f8c:	e000e010 	.word	0xe000e010

08000f90 <S2P_vInit>:
#include "SysTick_Interface.h"

#define S2P_NUMBER_SHIFT_REGs 2

void S2P_vInit()
{
 8000f90:	b580      	push	{r7, lr}
 8000f92:	af00      	add	r7, sp, #0
	MGPIO_Init( &S2P_Data_Pin);
 8000f94:	4805      	ldr	r0, [pc, #20]	; (8000fac <S2P_vInit+0x1c>)
 8000f96:	f7ff f989 	bl	80002ac <MGPIO_Init>
	MGPIO_Init( &S2P_Latch_Pin);
 8000f9a:	4805      	ldr	r0, [pc, #20]	; (8000fb0 <S2P_vInit+0x20>)
 8000f9c:	f7ff f986 	bl	80002ac <MGPIO_Init>
	MGPIO_Init( &S2P_Shift_Pin);
 8000fa0:	4804      	ldr	r0, [pc, #16]	; (8000fb4 <S2P_vInit+0x24>)
 8000fa2:	f7ff f983 	bl	80002ac <MGPIO_Init>


}
 8000fa6:	bf00      	nop
 8000fa8:	bd80      	pop	{r7, pc}
 8000faa:	bf00      	nop
 8000fac:	20000090 	.word	0x20000090
 8000fb0:	2000009c 	.word	0x2000009c
 8000fb4:	200000a8 	.word	0x200000a8

08000fb8 <ShiftData>:

static void ShiftData()
{
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	af00      	add	r7, sp, #0
	MGPIO_vSetOutputPinValueBSR(S2P_Shift_Pin.PIN_Port,S2P_Shift_Pin.PIN_Number,1);
 8000fbc:	4b0a      	ldr	r3, [pc, #40]	; (8000fe8 <ShiftData+0x30>)
 8000fbe:	781b      	ldrb	r3, [r3, #0]
 8000fc0:	4a09      	ldr	r2, [pc, #36]	; (8000fe8 <ShiftData+0x30>)
 8000fc2:	7851      	ldrb	r1, [r2, #1]
 8000fc4:	2201      	movs	r2, #1
 8000fc6:	4618      	mov	r0, r3
 8000fc8:	f7ff fcac 	bl	8000924 <MGPIO_vSetOutputPinValueBSR>
	MSTK_vSetBusyWait(1);
 8000fcc:	2001      	movs	r0, #1
 8000fce:	f7ff ffb9 	bl	8000f44 <MSTK_vSetBusyWait>
//	for(uint8_t i=0;i<100;i++);
	MGPIO_vSetOutputPinValueBSR(S2P_Shift_Pin.PIN_Port,S2P_Shift_Pin.PIN_Number,0);
 8000fd2:	4b05      	ldr	r3, [pc, #20]	; (8000fe8 <ShiftData+0x30>)
 8000fd4:	781b      	ldrb	r3, [r3, #0]
 8000fd6:	4a04      	ldr	r2, [pc, #16]	; (8000fe8 <ShiftData+0x30>)
 8000fd8:	7851      	ldrb	r1, [r2, #1]
 8000fda:	2200      	movs	r2, #0
 8000fdc:	4618      	mov	r0, r3
 8000fde:	f7ff fca1 	bl	8000924 <MGPIO_vSetOutputPinValueBSR>

}
 8000fe2:	bf00      	nop
 8000fe4:	bd80      	pop	{r7, pc}
 8000fe6:	bf00      	nop
 8000fe8:	200000a8 	.word	0x200000a8

08000fec <LatchData>:
static void LatchData()
{
 8000fec:	b580      	push	{r7, lr}
 8000fee:	af00      	add	r7, sp, #0
	MGPIO_vSetOutputPinValueBSR(S2P_Latch_Pin.PIN_Port,S2P_Latch_Pin.PIN_Number,1);
 8000ff0:	4b0a      	ldr	r3, [pc, #40]	; (800101c <LatchData+0x30>)
 8000ff2:	781b      	ldrb	r3, [r3, #0]
 8000ff4:	4a09      	ldr	r2, [pc, #36]	; (800101c <LatchData+0x30>)
 8000ff6:	7851      	ldrb	r1, [r2, #1]
 8000ff8:	2201      	movs	r2, #1
 8000ffa:	4618      	mov	r0, r3
 8000ffc:	f7ff fc92 	bl	8000924 <MGPIO_vSetOutputPinValueBSR>
	MSTK_vSetBusyWait(1);
 8001000:	2001      	movs	r0, #1
 8001002:	f7ff ff9f 	bl	8000f44 <MSTK_vSetBusyWait>

	MGPIO_vSetOutputPinValueBSR(S2P_Latch_Pin.PIN_Port,S2P_Latch_Pin.PIN_Number,0);
 8001006:	4b05      	ldr	r3, [pc, #20]	; (800101c <LatchData+0x30>)
 8001008:	781b      	ldrb	r3, [r3, #0]
 800100a:	4a04      	ldr	r2, [pc, #16]	; (800101c <LatchData+0x30>)
 800100c:	7851      	ldrb	r1, [r2, #1]
 800100e:	2200      	movs	r2, #0
 8001010:	4618      	mov	r0, r3
 8001012:	f7ff fc87 	bl	8000924 <MGPIO_vSetOutputPinValueBSR>

}
 8001016:	bf00      	nop
 8001018:	bd80      	pop	{r7, pc}
 800101a:	bf00      	nop
 800101c:	2000009c 	.word	0x2000009c

08001020 <S2P_vSendData>:
void S2P_vSendData(uint32_t copy_u32Data)
{
 8001020:	b580      	push	{r7, lr}
 8001022:	b084      	sub	sp, #16
 8001024:	af00      	add	r7, sp, #0
 8001026:	6078      	str	r0, [r7, #4]
	for(int i = 0 ;i<8*2 ; i++)
 8001028:	2300      	movs	r3, #0
 800102a:	60fb      	str	r3, [r7, #12]
 800102c:	e013      	b.n	8001056 <S2P_vSendData+0x36>
	{
		/* 1. put data on data pin  */
		MGPIO_vSetOutputPinValueBSR(S2P_Data_Pin.PIN_Port,S2P_Data_Pin.PIN_Number,READ_BIT(copy_u32Data,i));
 800102e:	4b0e      	ldr	r3, [pc, #56]	; (8001068 <S2P_vSendData+0x48>)
 8001030:	7818      	ldrb	r0, [r3, #0]
 8001032:	4b0d      	ldr	r3, [pc, #52]	; (8001068 <S2P_vSendData+0x48>)
 8001034:	7859      	ldrb	r1, [r3, #1]
 8001036:	687a      	ldr	r2, [r7, #4]
 8001038:	68fb      	ldr	r3, [r7, #12]
 800103a:	fa22 f303 	lsr.w	r3, r2, r3
 800103e:	b2db      	uxtb	r3, r3
 8001040:	f003 0301 	and.w	r3, r3, #1
 8001044:	b2db      	uxtb	r3, r3
 8001046:	461a      	mov	r2, r3
 8001048:	f7ff fc6c 	bl	8000924 <MGPIO_vSetOutputPinValueBSR>
		 * a. send high
		 *
		 * b. delay
		 * c.send low */

		ShiftData();
 800104c:	f7ff ffb4 	bl	8000fb8 <ShiftData>
	for(int i = 0 ;i<8*2 ; i++)
 8001050:	68fb      	ldr	r3, [r7, #12]
 8001052:	3301      	adds	r3, #1
 8001054:	60fb      	str	r3, [r7, #12]
 8001056:	68fb      	ldr	r3, [r7, #12]
 8001058:	2b0f      	cmp	r3, #15
 800105a:	dde8      	ble.n	800102e <S2P_vSendData+0xe>
		 * * a. send high
		 * b. delay
		 * c.send low  */

	}
	LatchData();
 800105c:	f7ff ffc6 	bl	8000fec <LatchData>
}
 8001060:	bf00      	nop
 8001062:	3710      	adds	r7, #16
 8001064:	46bd      	mov	sp, r7
 8001066:	bd80      	pop	{r7, pc}
 8001068:	20000090 	.word	0x20000090

0800106c <main>:
#include <NVIC_Interface.h>
#include <RCC_Interface.h>


int main(void)
{
 800106c:	b580      	push	{r7, lr}
 800106e:	b082      	sub	sp, #8
 8001070:	af00      	add	r7, sp, #0


	//MSTK_vInit();
	LEDMTX_vInit();
 8001072:	f7ff f8af 	bl	80001d4 <LEDMTX_vInit>
//	RCC_AHB1EnableCLK(GPIOAEN);
//	RCC_AHB1EnableCLK(GPIOBEN);
//	RCC_APB2EnableCLK(SYSCFGEN);


	MGPIO_vSetPinType(PORTA,PIN8,OUTPUT);
 8001076:	2201      	movs	r2, #1
 8001078:	2108      	movs	r1, #8
 800107a:	2000      	movs	r0, #0
 800107c:	f7ff f964 	bl	8000348 <MGPIO_vSetPinType>


	MGPIO_vSetOutputPinValueBSR(PORTA,PIN8,SET);
 8001080:	2201      	movs	r2, #1
 8001082:	2108      	movs	r1, #8
 8001084:	2000      	movs	r0, #0
 8001086:	f7ff fc4d 	bl	8000924 <MGPIO_vSetOutputPinValueBSR>


	uint8_t smily[8]={255, 219, 219, 127, 189, 195, 255, 255};
 800108a:	4a06      	ldr	r2, [pc, #24]	; (80010a4 <main+0x38>)
 800108c:	463b      	mov	r3, r7
 800108e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8001092:	e883 0003 	stmia.w	r3, {r0, r1}

	/* Loop forever */
	for(;;)
	{
		LEDMTX_vDisplayFrame(smily,1000);
 8001096:	463b      	mov	r3, r7
 8001098:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800109c:	4618      	mov	r0, r3
 800109e:	f7ff f8c3 	bl	8000228 <LEDMTX_vDisplayFrame>
 80010a2:	e7f8      	b.n	8001096 <main+0x2a>
 80010a4:	0800115c 	.word	0x0800115c

080010a8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80010a8:	480d      	ldr	r0, [pc, #52]	; (80010e0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80010aa:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80010ac:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80010b0:	480c      	ldr	r0, [pc, #48]	; (80010e4 <LoopForever+0x6>)
  ldr r1, =_edata
 80010b2:	490d      	ldr	r1, [pc, #52]	; (80010e8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80010b4:	4a0d      	ldr	r2, [pc, #52]	; (80010ec <LoopForever+0xe>)
  movs r3, #0
 80010b6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80010b8:	e002      	b.n	80010c0 <LoopCopyDataInit>

080010ba <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80010ba:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80010bc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80010be:	3304      	adds	r3, #4

080010c0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80010c0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80010c2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80010c4:	d3f9      	bcc.n	80010ba <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80010c6:	4a0a      	ldr	r2, [pc, #40]	; (80010f0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80010c8:	4c0a      	ldr	r4, [pc, #40]	; (80010f4 <LoopForever+0x16>)
  movs r3, #0
 80010ca:	2300      	movs	r3, #0
  b LoopFillZerobss
 80010cc:	e001      	b.n	80010d2 <LoopFillZerobss>

080010ce <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80010ce:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80010d0:	3204      	adds	r2, #4

080010d2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80010d2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80010d4:	d3fb      	bcc.n	80010ce <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80010d6:	f000 f811 	bl	80010fc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80010da:	f7ff ffc7 	bl	800106c <main>

080010de <LoopForever>:

LoopForever:
  b LoopForever
 80010de:	e7fe      	b.n	80010de <LoopForever>
  ldr   r0, =_estack
 80010e0:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 80010e4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80010e8:	200000b4 	.word	0x200000b4
  ldr r2, =_sidata
 80010ec:	0800116c 	.word	0x0800116c
  ldr r2, =_sbss
 80010f0:	200000b4 	.word	0x200000b4
  ldr r4, =_ebss
 80010f4:	20000110 	.word	0x20000110

080010f8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80010f8:	e7fe      	b.n	80010f8 <ADC_IRQHandler>
	...

080010fc <__libc_init_array>:
 80010fc:	b570      	push	{r4, r5, r6, lr}
 80010fe:	4d0d      	ldr	r5, [pc, #52]	; (8001134 <__libc_init_array+0x38>)
 8001100:	4c0d      	ldr	r4, [pc, #52]	; (8001138 <__libc_init_array+0x3c>)
 8001102:	1b64      	subs	r4, r4, r5
 8001104:	10a4      	asrs	r4, r4, #2
 8001106:	2600      	movs	r6, #0
 8001108:	42a6      	cmp	r6, r4
 800110a:	d109      	bne.n	8001120 <__libc_init_array+0x24>
 800110c:	4d0b      	ldr	r5, [pc, #44]	; (800113c <__libc_init_array+0x40>)
 800110e:	4c0c      	ldr	r4, [pc, #48]	; (8001140 <__libc_init_array+0x44>)
 8001110:	f000 f818 	bl	8001144 <_init>
 8001114:	1b64      	subs	r4, r4, r5
 8001116:	10a4      	asrs	r4, r4, #2
 8001118:	2600      	movs	r6, #0
 800111a:	42a6      	cmp	r6, r4
 800111c:	d105      	bne.n	800112a <__libc_init_array+0x2e>
 800111e:	bd70      	pop	{r4, r5, r6, pc}
 8001120:	f855 3b04 	ldr.w	r3, [r5], #4
 8001124:	4798      	blx	r3
 8001126:	3601      	adds	r6, #1
 8001128:	e7ee      	b.n	8001108 <__libc_init_array+0xc>
 800112a:	f855 3b04 	ldr.w	r3, [r5], #4
 800112e:	4798      	blx	r3
 8001130:	3601      	adds	r6, #1
 8001132:	e7f2      	b.n	800111a <__libc_init_array+0x1e>
 8001134:	08001164 	.word	0x08001164
 8001138:	08001164 	.word	0x08001164
 800113c:	08001164 	.word	0x08001164
 8001140:	08001168 	.word	0x08001168

08001144 <_init>:
 8001144:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001146:	bf00      	nop
 8001148:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800114a:	bc08      	pop	{r3}
 800114c:	469e      	mov	lr, r3
 800114e:	4770      	bx	lr

08001150 <_fini>:
 8001150:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001152:	bf00      	nop
 8001154:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001156:	bc08      	pop	{r3}
 8001158:	469e      	mov	lr, r3
 800115a:	4770      	bx	lr
